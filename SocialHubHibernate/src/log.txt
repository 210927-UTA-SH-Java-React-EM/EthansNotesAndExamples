2021-11-02 11:16:49 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:16:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:16:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:16:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:16:49 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:16:49 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:16:49 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:16:49 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:16:49 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:16:49 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:16:49 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:16:49 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:16:49 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:16:49 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:16:49 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc10d84
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@26a4842b
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@31e75d13
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50eca7c6
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28d6290
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@77602954
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@77602954
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@61526469
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@61526469
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@25ddbbbb
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c0fae6c
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f2f577
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70dd7e15
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5ac86ba5
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6a62689d
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@79e18e38
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f2606b
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28a0fd6c
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27a5328c
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@37f21974
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a1d204a
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62dae245
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:16:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:16:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:16:49 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:16:49 DEBUG pooling:143 - No driver class specified
2021-11-02 11:16:49 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc://postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:16:49 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:16:49 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:16:49 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:16:49 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:16:49 WARN  JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Cannot invoke "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState.getConnection()" because "this.state" is null
2021-11-02 11:18:29 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:18:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:18:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:18:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:18:29 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:18:29 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:18:30 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:18:30 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:18:30 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:18:30 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:18:30 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:18:30 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:18:30 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:18:30 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:18:30 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc10d84
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@26a4842b
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@31e75d13
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50eca7c6
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28d6290
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@77602954
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@77602954
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@61526469
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@61526469
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@25ddbbbb
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c0fae6c
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f2f577
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70dd7e15
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5ac86ba5
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6a62689d
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@79e18e38
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f2606b
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28a0fd6c
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27a5328c
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@37f21974
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a1d204a
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62dae245
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:18:30 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:18:30 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:18:30 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:18:30 DEBUG pooling:143 - No driver class specified
2021-11-02 11:18:30 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc://postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:18:30 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:18:30 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:18:30 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:18:30 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:18:30 WARN  JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Cannot invoke "org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PoolState.getConnection()" because "this.state" is null
2021-11-02 11:19:13 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:19:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:19:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:19:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:19:13 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:19:13 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:19:13 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:19:13 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:19:13 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:19:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:19:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:19:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:19:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:19:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:19:13 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc10d84
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@26a4842b
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@31e75d13
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50eca7c6
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28d6290
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@77602954
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@77602954
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@61526469
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@61526469
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@25ddbbbb
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c0fae6c
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f2f577
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70dd7e15
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5ac86ba5
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6a62689d
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@79e18e38
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f2606b
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28a0fd6c
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27a5328c
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@37f21974
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a1d204a
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62dae245
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:19:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:19:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:19:13 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:19:13 DEBUG pooling:143 - No driver class specified
2021-11-02 11:19:13 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:19:13 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:19:13 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:19:13 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:19:13 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:19:14 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:19:14 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-11-02 11:19:14 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-11-02 11:19:14 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:19:14 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:19:30 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-11-02 11:19:30 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:19:30 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:19:30 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5e3a39cd
2021-11-02 11:19:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5e3a39cd
2021-11-02 11:19:30 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:19:30 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1917d90f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66bfd864]
2021-11-02 11:19:30 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:19:30 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:19:30 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:19:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:19:30 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:19:30 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:19:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:19:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:19:30 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:19:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:19:30 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:19:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:19:30 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:19:30 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:19:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:19:30 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:19:30 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:19:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:19:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:19:30 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:19:30 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:19:30 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:19:30 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:19:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:19:30 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:19:30 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:19:30 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:19:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:19:30 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:19:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:19:30 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:19:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:19:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:19:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:19:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:19:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:19:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:19:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:19:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:19:30 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:19:30 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:19:30 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:19:30 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:19:30 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:19:30 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:19:30 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:19:30 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:19:30 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:19:30 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:19:30 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:19:30 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:19:30 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:19:30 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:19:30 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:19:30 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:19:30 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:19:30 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:19:30 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:19:30 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:19:30 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:19:30 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:19:30 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:19:30 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:19:30 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:19:30 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:19:30 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:19:30 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:19:30 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:19:30 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:19:30 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:19:30 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:19:30 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:19:30 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:19:30 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:19:30 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:19:30 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:19:30 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:19:30 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:19:30 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:19:30 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:19:30 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:19:30 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:19:30 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:19:30 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:19:30 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:19:30 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:19:30 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:19:30 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:19:30 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:19:30 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:19:30 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:19:30 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:19:30 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-11-02 11:19:30 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:19:30 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:19:30 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:19:30 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:19:30 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:19:30 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:19:30 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:19:30 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:19:30 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3abfe845, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:19:30 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:19:31 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:19:31 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:19:31 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:19:31 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:19:31 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:19:31 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:19:31 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:19:31 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:19:31 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:19:31 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:19:31 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:19:31 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:19:31 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:19:31 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:19:31 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1917d90f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@797c3c3b]
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:19:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:19:31 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af64ce0]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e3cd6fe]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@481558ce]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c0f28f8]
2021-11-02 11:19:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:19:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:19:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:19:31 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5856dbe4]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a058be5]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eaf7902]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20c812c8]
2021-11-02 11:19:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:19:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:19:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:19:31 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:19:31 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:19:31 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:19:31 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec7b5de]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@373e6b9d]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65629ac6]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b8aaf1]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5482bcac]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:19:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:19:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:19:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:19:31 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10244722]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@721d8ab5]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33bb3f86]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1946384]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac4c3f7]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:19:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:19:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:19:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:19:31 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:19:31 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:19:31 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4041739c]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cff6b74]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7186b202]
2021-11-02 11:19:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:19:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:19:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:19:31 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e29f4f6]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41b64020]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39dec536]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1a256d]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:19:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:19:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:19:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:19:31 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@684e8c9d]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecc02bb]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79e7188e]
2021-11-02 11:19:31 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773014d3]
2021-11-02 11:19:31 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:19:31 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:19:31 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:19:31 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:19:31 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:19:31 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:19:31 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:19:31 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:19:31 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:19:31 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:19:31 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:19:31 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:19:31 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@47b33e07
2021-11-02 11:19:31 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 8dbc9104-9c34-4a62-8bc0-e1fef8b5bf24 (<unnamed>)
2021-11-02 11:19:31 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:19:31 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:19:31 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:19:31 DEBUG TransactionImpl:84 - begin
2021-11-02 11:19:31 DEBUG SQL:94 - 
    select
        nextval ('hibernate_sequence')
2021-11-02 11:19:31 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: relation "hibernate_sequence" does not exist
  Position: 17
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2102)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1835)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:273)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.id.enhanced.SequenceStructure$1.getNextValue(SequenceStructure.java:95)
	at org.hibernate.id.enhanced.NoopOptimizer.generate(NoopOptimizer.java:40)
	at org.hibernate.id.enhanced.SequenceStyleGenerator.generate(SequenceStyleGenerator.java:520)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:119)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:19:31 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:19:31 ERROR SqlExceptionHelper:142 - ERROR: relation "hibernate_sequence" does not exist
  Position: 17
2021-11-02 11:22:38 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:22:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:22:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:22:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:22:39 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:22:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:22:39 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:22:39 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:22:39 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:22:39 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:22:39 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:22:39 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:22:39 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:22:39 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:22:39 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@47605f2f
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@47605f2f
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@47605f2f
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4721d212
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4bff1903
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@56c9bbd8
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@5b057c8c
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@5b057c8c
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b057c8c
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1e1d3956
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1e1d3956
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e1d3956
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@73db4768
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@73db4768
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73db4768
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7a8fa663
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7a8fa663
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a8fa663
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@485a3466
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@485a3466
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@485a3466
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@c260bdc
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@c260bdc
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c260bdc
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4baf352a
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4baf352a
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4baf352a
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2dbe250d
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2dbe250d
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56ace400
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56ace400
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@339bf286
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@339bf286
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3234f74e
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@557a1e2d
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4b3c354a
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4b3c354a
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@54227100
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@54227100
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@1bc715b8
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1bc715b8
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@63192798
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@63192798
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ef0d29e
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ef0d29e
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2c3dec30
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2c3dec30
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6731787b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6731787b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4ba534b0
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4ba534b0
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c7d121c
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c7d121c
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@58670130
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58670130
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@18518ccf
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18518ccf
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c9f0a20
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c9f0a20
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c9f0a20
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1992eaf4
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@7383eae2
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7383eae2
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7383eae2
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@72a85671
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@5049d8b2
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5049d8b2
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@1643d68f
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1643d68f
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@acb0951
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@acb0951
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@675d8c96
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@675d8c96
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3185fa6b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3185fa6b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a320ade
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@ab7a938
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@ab7a938
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@ab7a938
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@eb6449b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@eb6449b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@eb6449b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@319988b0
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@305f031
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@1536602f
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1536602f
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@1536602f
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@743cb8e0
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@743cb8e0
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@743cb8e0
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@649725e3
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@fd0e5b6
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@7e809b79
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e809b79
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@89c10b7
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@6175619b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6175619b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4e76dac
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e76dac
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d465e4b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@52500920
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@76a36b71
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@5bda80bf
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5bda80bf
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51df223b
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@fd46303
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60d8c0dc
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4204541c
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a62689d
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4602c2a9
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60fa3495
2021-11-02 11:22:39 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e2822
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:22:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:22:39 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:22:39 DEBUG pooling:143 - No driver class specified
2021-11-02 11:22:39 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:22:39 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:22:39 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:22:39 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:22:39 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:22:39 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:22:39 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-11-02 11:22:39 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-11-02 11:22:39 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:22:39 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:22:55 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-11-02 11:22:55 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:22:55 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:22:55 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@773bd77b
2021-11-02 11:22:55 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@773bd77b
2021-11-02 11:22:55 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3185fa6b
2021-11-02 11:22:55 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c211fd0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7004e3d]
2021-11-02 11:22:55 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:22:55 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:22:55 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:22:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:22:55 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:22:55 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:22:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:22:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:22:55 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:22:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:22:55 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:22:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:22:55 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:22:55 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:22:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:22:55 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:22:55 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:22:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:22:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:22:55 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:22:55 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:22:55 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:22:55 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:22:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:22:55 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:22:55 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:22:55 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:22:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:22:55 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:22:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:22:55 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:22:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:22:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:22:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:22:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:22:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:22:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:22:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:22:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:22:55 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:22:55 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:22:55 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:22:55 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:22:55 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:22:55 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:22:55 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:22:55 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:22:55 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:22:55 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:22:55 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:22:55 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:22:55 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:22:55 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:22:55 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:22:55 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:22:55 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:22:55 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:22:55 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:22:55 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:22:55 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:22:55 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:22:55 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:22:55 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:22:55 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:22:55 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:22:55 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:22:55 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:22:55 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:22:55 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:22:55 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:22:55 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:22:55 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:22:55 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:22:55 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:22:55 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:22:55 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:22:55 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:22:55 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:22:55 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:22:55 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:22:55 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:22:55 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:22:55 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:22:55 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:22:55 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:22:55 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:22:55 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:22:55 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:22:55 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:22:55 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:22:55 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:22:55 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:22:55 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-11-02 11:22:55 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:22:55 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:22:55 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:22:55 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:22:55 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:22:55 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:22:55 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:22:55 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:22:55 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e530163, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:22:55 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:22:55 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:22:55 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:22:55 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:22:55 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:22:55 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:22:55 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:22:55 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:22:55 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:22:55 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:22:55 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:22:55 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:22:55 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:22:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:22:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:22:56 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:22:56 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:22:56 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7c211fd0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4cb2918c]
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:22:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:22:56 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f18e31]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@164642a4]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9dada78]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e90da5]
2021-11-02 11:22:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:22:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:22:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:22:56 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67bd351e]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@468e8565]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@91da29b]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7066363]
2021-11-02 11:22:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:22:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:22:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:22:56 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:22:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:22:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:22:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ea0269]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43ecfeb5]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51efb731]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53940e2f]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45e6d1e0]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:22:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:22:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:22:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:22:56 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61db86bf]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e377967]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dadd690]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@707e4fe4]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3281dfc2]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:22:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:22:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:22:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:22:56 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:22:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:22:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eb5da12]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a50d04a]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83bb0f]
2021-11-02 11:22:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:22:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:22:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:22:56 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b8aaf1]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5482bcac]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@721d8ab5]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33bb3f86]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:22:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:22:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:22:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:22:56 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e3ff233]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c952a33]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@709f0202]
2021-11-02 11:22:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@654e6a90]
2021-11-02 11:22:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:22:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:22:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:22:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:22:56 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:22:56 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:22:56 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:22:56 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:22:56 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:22:56 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:22:56 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:22:56 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:22:56 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2da81754
2021-11-02 11:22:56 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: ca058e92-343d-4b3a-bbaa-e0a2ddfa6f31 (<unnamed>)
2021-11-02 11:22:56 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:22:56 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:22:56 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:22:56 DEBUG TransactionImpl:84 - begin
2021-11-02 11:22:56 DEBUG SQL:94 - 
    select
        nextval ('hibernate_sequence')
2021-11-02 11:22:56 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: relation "hibernate_sequence" does not exist
  Position: 17
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2102)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1835)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:273)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.id.enhanced.SequenceStructure$1.getNextValue(SequenceStructure.java:95)
	at org.hibernate.id.enhanced.NoopOptimizer.generate(NoopOptimizer.java:40)
	at org.hibernate.id.enhanced.SequenceStyleGenerator.generate(SequenceStyleGenerator.java:520)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:119)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:22:56 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:22:56 ERROR SqlExceptionHelper:142 - ERROR: relation "hibernate_sequence" does not exist
  Position: 17
2021-11-02 11:24:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:24:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:24:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:24:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:24:39 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:24:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:24:39 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:24:39 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:24:39 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:24:40 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:24:40 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:24:40 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:24:40 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:24:40 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:24:40 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@435871cb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@435871cb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@435871cb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@666b83a4
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b220bcb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@160ac7fb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@5b40ceb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@5b40ceb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b40ceb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@295eaa7c
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@295eaa7c
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@295eaa7c
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1dd0e7c4
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1dd0e7c4
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1dd0e7c4
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@37bd68c3
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@37bd68c3
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37bd68c3
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4bff1903
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4bff1903
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4bff1903
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@f79a760
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@f79a760
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f79a760
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@652a7737
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@652a7737
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@652a7737
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4e28bdd1
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4e28bdd1
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@a8c1f44
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@a8c1f44
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@78a287ed
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@78a287ed
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a527389
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4264b240
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@76f7d241
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@76f7d241
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@22d6f11
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22d6f11
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@36676c1a
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@36676c1a
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@293d0107
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@293d0107
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@55e8ec2f
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@55e8ec2f
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4c51bb7
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4c51bb7
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d3430a7
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d3430a7
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5536379e
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5536379e
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1de5f0ef
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1de5f0ef
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2c3dec30
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2c3dec30
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@16f7b4af
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@16f7b4af
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2c104774
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c104774
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c104774
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6a66a204
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@34625ccd
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34625ccd
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34625ccd
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@533377b
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@58670130
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58670130
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@46f699d5
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46f699d5
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@162be91c
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@162be91c
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@f74e835
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f74e835
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7383eae2
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7383eae2
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48c35007
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5049d8b2
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5049d8b2
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5049d8b2
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1643d68f
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1643d68f
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1643d68f
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@acb0951
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@28276e50
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@68d6972f
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@68d6972f
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@68d6972f
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3a320ade
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3a320ade
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3a320ade
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@21005f6c
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@ab7a938
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@42b64ab8
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@42b64ab8
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@319988b0
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@25ddbbbb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25ddbbbb
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2c1b9e4b
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c1b9e4b
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c168660
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36b0fcd5
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@625e134e
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@30ea8c23
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30ea8c23
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f2f577
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6273c5a4
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d465e4b
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53e211ee
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41a90fa8
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d8bbcdc
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52500920
2021-11-02 11:24:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@117e0fe5
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:24:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:24:40 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:24:40 DEBUG pooling:143 - No driver class specified
2021-11-02 11:24:40 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:24:40 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:24:40 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:24:40 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:24:40 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:24:40 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:24:40 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-11-02 11:24:40 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-11-02 11:24:40 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:24:40 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:24:56 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-11-02 11:24:56 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:24:56 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:24:56 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@38499e48
2021-11-02 11:24:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@38499e48
2021-11-02 11:24:56 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@7383eae2
2021-11-02 11:24:56 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29182679] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57bd802b]
2021-11-02 11:24:56 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:24:56 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:24:56 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:24:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:24:56 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:24:56 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:24:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:24:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:24:56 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:24:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:24:56 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:24:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:24:56 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:24:56 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:24:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:24:56 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:24:56 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:24:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:24:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:24:56 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:24:56 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:24:56 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:24:56 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:24:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:24:56 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:24:56 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:24:56 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:24:56 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:24:56 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:24:56 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:24:56 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:24:56 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:24:56 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:24:56 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:24:56 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:24:56 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:24:56 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:24:56 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:24:56 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:24:56 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:24:56 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:24:56 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:24:56 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:24:56 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:24:56 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:24:56 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:24:56 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:24:56 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:24:56 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:24:56 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:24:56 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:24:56 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:24:56 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:24:56 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:24:56 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:24:56 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:24:56 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:24:56 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:24:56 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:24:56 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:24:56 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:24:56 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:24:56 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:24:56 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:24:56 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:24:56 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:24:56 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:24:56 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:24:56 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:24:56 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:24:56 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:24:56 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:24:56 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:24:56 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:24:56 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:24:56 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:24:56 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:24:56 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:24:56 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:24:56 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:24:56 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:24:56 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:24:56 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:24:56 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:24:56 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:24:56 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:24:56 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:24:56 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:24:56 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:24:56 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:24:56 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:24:56 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:24:56 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-11-02 11:24:56 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:24:56 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:24:56 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:24:56 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:24:56 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:24:56 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:24:56 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:24:56 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:24:56 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@12abdfb, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:24:56 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:24:56 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:24:56 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:24:56 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:24:56 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:24:56 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:24:56 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:24:56 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:24:56 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:24:56 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:24:56 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:24:56 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:24:56 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:24:56 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:24:56 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:24:56 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29182679] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@70e94ecb]
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:24:56 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:24:56 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48a2db72]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ef2ab73]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0a66bd]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dfe23e8]
2021-11-02 11:24:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:24:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:24:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:24:56 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31f295b6]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c82b5df]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67eec8e1]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4214ae8f]
2021-11-02 11:24:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:24:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:24:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:24:56 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:24:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:24:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:24:56 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9b23822]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a6c7f42]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a515e5d]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423a0e1d]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32f32623]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:24:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:24:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:24:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:24:56 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3becc950]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79476a4e]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae997b]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f557c37]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a01d7f0]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:24:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:24:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:24:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:24:56 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:24:56 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:24:56 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@494c8f29]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f379769]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eb5da12]
2021-11-02 11:24:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:24:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:24:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:24:56 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40709f9]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b1b19cf]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aa31ffc]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7945b206]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:24:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:24:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:24:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:24:56 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b862408]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ddee60f]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@307e4c44]
2021-11-02 11:24:56 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8a3ada]
2021-11-02 11:24:56 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:24:56 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:24:56 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:24:56 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:24:56 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:24:56 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:24:56 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:24:56 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:24:56 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:24:56 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:24:56 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:24:56 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:24:56 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7d8cf9ac
2021-11-02 11:24:56 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: b9ded9c2-cfbc-4e72-b405-32526bfb7fa1 (<unnamed>)
2021-11-02 11:24:56 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:24:56 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:24:56 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:24:56 DEBUG TransactionImpl:84 - begin
2021-11-02 11:24:56 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:24:56 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:24:56 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2102)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1835)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeUpdate(AbstractJdbc2Statement.java:334)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:24:56 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:24:56 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:27:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:27:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:27:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:27:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:27:04 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:27:04 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:27:04 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:27:04 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:27:04 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:27:04 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:27:04 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:27:04 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:27:04 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:27:04 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:27:04 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc10d84
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@26a4842b
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@31e75d13
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50eca7c6
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28d6290
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@77602954
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@77602954
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:27:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@61526469
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@61526469
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@25ddbbbb
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c0fae6c
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f2f577
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70dd7e15
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5ac86ba5
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6a62689d
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@79e18e38
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f2606b
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28a0fd6c
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27a5328c
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@37f21974
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a1d204a
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62dae245
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:27:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:27:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:27:05 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:27:05 DEBUG pooling:143 - No driver class specified
2021-11-02 11:27:05 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:27:05 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:27:05 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:27:05 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:27:05 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:27:05 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:27:05 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-11-02 11:27:05 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-11-02 11:27:05 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:27:05 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:27:20 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-11-02 11:27:20 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:27:20 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:27:20 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5e3a39cd
2021-11-02 11:27:20 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@5e3a39cd
2021-11-02 11:27:20 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:27:20 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1917d90f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66bfd864]
2021-11-02 11:27:21 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:27:21 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:27:21 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:27:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:27:21 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:27:21 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:27:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:27:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:27:21 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:27:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:27:21 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:27:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:27:21 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:27:21 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:27:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:27:21 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:27:21 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:27:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:27:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:27:21 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:27:21 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:27:21 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:27:21 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:27:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:27:21 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:27:21 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:27:21 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:27:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:27:21 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:27:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:27:21 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:27:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:27:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:27:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:27:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:27:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:27:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:27:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:27:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:27:21 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:27:21 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:27:21 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:27:21 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:27:21 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:27:21 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:27:21 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:27:21 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:27:21 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:27:21 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:27:21 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:27:21 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:27:21 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:27:21 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:27:21 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:27:21 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:27:21 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:27:21 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:27:21 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:27:21 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:27:21 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:27:21 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:27:21 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:27:21 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:27:21 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:27:21 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:27:21 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:27:21 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:27:21 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:27:21 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:27:21 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:27:21 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:27:21 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:27:21 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:27:21 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:27:21 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:27:21 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:27:21 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:27:21 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:27:21 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:27:21 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:27:21 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:27:21 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:27:21 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:27:21 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:27:21 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:27:21 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:27:21 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:27:21 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:27:21 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:27:21 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:27:21 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:27:21 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:27:21 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-11-02 11:27:21 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:27:21 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:27:21 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:27:21 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:27:21 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:27:21 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:27:21 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:27:21 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:27:21 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2ab5afc7, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:27:21 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:27:21 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:27:21 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:27:21 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:27:21 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:27:21 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:27:21 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:27:21 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:27:21 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:27:21 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:27:21 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:27:21 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:27:21 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:27:21 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:27:21 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:27:21 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1917d90f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2373ad99]
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:27:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:27:21 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@164642a4]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14c141c0]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7499eac7]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b4fc2d1]
2021-11-02 11:27:21 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:27:21 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:27:21 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:27:21 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8e9d06]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2272cbb0]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f6f3cc]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180b3819]
2021-11-02 11:27:21 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:27:21 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:27:21 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:27:21 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:27:21 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:27:21 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:27:21 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e3d37e]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8a6631b]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@472d0f4]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4bc59b27]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d7a64ca]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:27:21 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:27:21 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:27:21 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:27:21 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76ff68c5]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3635099]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da1380b]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1095d23a]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3332c7a5]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:27:21 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:27:21 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:27:21 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:27:21 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:27:21 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:27:21 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ac4c3f7]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7412a438]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c02670f]
2021-11-02 11:27:21 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:27:21 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:27:21 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:27:21 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9accff0]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52559a69]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f85217c]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fd7a37]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:27:21 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:27:21 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:27:21 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:27:21 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6436e181]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7186b202]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36068727]
2021-11-02 11:27:21 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72543547]
2021-11-02 11:27:21 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:27:21 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:27:21 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:27:21 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:27:21 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:27:21 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:27:21 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:27:21 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:27:21 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:27:21 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:27:21 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:27:21 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:27:21 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@122635ef
2021-11-02 11:27:21 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: c6e15409-0c49-420c-9ef7-09a37b3f15ec (<unnamed>)
2021-11-02 11:27:21 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:27:21 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:27:21 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:27:21 DEBUG TransactionImpl:84 - begin
2021-11-02 11:27:21 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:27:21 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:27:21 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2102)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1835)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeUpdate(AbstractJdbc2Statement.java:334)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:27:21 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:27:21 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:30:50 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:30:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:30:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:30:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:30:51 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:30:51 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:30:51 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:30:51 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:30:51 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:30:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:30:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:30:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:30:51 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:30:51 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:30:51 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56ace400
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc10d84
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@26a4842b
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@31e75d13
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2611b9a3
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b64c4b7
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1252b961
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d098f9b
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b64240d
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d24ffa1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42a9e5d1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2756c0a7
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c8bca63
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c55f277
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50eca7c6
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28d6290
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@77602954
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@77602954
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@40258c2f
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f28bd56
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c7d3c46
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a48e6e2
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34a75079
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4052274f
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@28276e50
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@64beebb7
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@61526469
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@61526469
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a39fe6a
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d1f7216
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@25ddbbbb
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@743cb8e0
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c0fae6c
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@475835b1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5cc126dc
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d08f3f5
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f058b8a
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f2f577
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@18a3962d
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2289aca5
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70dd7e15
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5ac86ba5
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@2d10e0b1
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51df223b
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6a62689d
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@79e18e38
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62679465
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f2606b
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@94f6bfb
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51e4ccb3
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@28a0fd6c
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@27a5328c
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@37f21974
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32cb636e
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a1d204a
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62dae245
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:30:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:30:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:30:51 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:30:51 DEBUG pooling:143 - No driver class specified
2021-11-02 11:30:51 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:30:51 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:30:51 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:30:51 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:30:51 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:30:51 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:30:51 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-11-02 11:30:51 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-11-02 11:30:51 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:30:51 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:31:08 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-11-02 11:31:08 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:31:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:31:08 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@bdecc21
2021-11-02 11:31:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@bdecc21
2021-11-02 11:31:08 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@30ea8c23
2021-11-02 11:31:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2fe88a09] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1917d90f]
2021-11-02 11:31:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:31:08 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:31:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=users}, physicalName=Name{catalog=null, schema=users}]
2021-11-02 11:31:08 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:31:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:31:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:31:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:31:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:31:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:31:08 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:31:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:31:08 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:31:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:31:08 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:31:08 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:31:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:31:08 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:31:08 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:31:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:31:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:31:08 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:31:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:31:08 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:31:08 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:31:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:31:08 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:31:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:31:08 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:31:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:31:08 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:31:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:31:08 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:31:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:31:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:31:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:31:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:31:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:31:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:31:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:31:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:31:08 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:31:08 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:31:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:31:08 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:31:08 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:31:08 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:31:08 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:31:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:31:08 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:31:08 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:31:08 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:31:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:31:08 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:31:08 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:31:08 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:31:08 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:31:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:31:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:31:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:31:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:31:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:31:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:31:08 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:31:08 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:31:08 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:31:08 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:31:08 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:31:08 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:31:08 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:31:08 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:31:08 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:31:08 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:31:08 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:31:08 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:31:08 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:31:08 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:31:08 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:31:08 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:31:08 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:31:08 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:31:08 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:31:08 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:31:08 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:31:08 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:31:08 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:31:08 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:31:08 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:31:08 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:31:08 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:31:08 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:31:08 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:31:08 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:31:08 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:31:08 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-11-02 11:31:08 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:31:08 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:31:08 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:31:08 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:31:08 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:31:08 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:31:08 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:31:08 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:31:08 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@8ee0c23, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:31:08 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:31:08 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:31:08 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:31:08 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:31:08 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:31:08 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:31:08 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:31:08 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:31:08 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:31:08 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:31:08 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:31:08 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:31:08 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:31:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:31:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:31:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:31:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:31:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:31:08 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:31:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2fe88a09] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6f1a16fe]
2021-11-02 11:31:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:31:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:31:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:31:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:31:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:31:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:31:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:31:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:31:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_2_, post_.user_id as user_id3_2_ from posts post_ where post_.post_id=?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fad214a]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@484149eb]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2e5c0d]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79eeff87]
2021-11-02 11:31:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:31:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:31:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}

2021-11-02 11:31:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.content as content2_2_0_, post0_.user_id as user_id3_2_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47acd13b]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77d381e6]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2272cbb0]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f6f3cc]
2021-11-02 11:31:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:31:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:31:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}

2021-11-02 11:31:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_2_0_, post0_.content as content2_2_0_, post0_.user_id as user_id3_2_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:31:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_2_2_, post0_.content as content2_2_2_, post0_.user_id as user_id3_2_2_, likes1_.post_id as post_id1_1_4_, user2_.user_id as user_id2_1_4_, user2_.user_id as user_id1_0_0_, user2_.email as email2_0_0_, user2_.first_name as first_na3_0_0_, user2_.last_name as last_nam4_0_0_, user2_.password as password5_0_0_, user2_.username as username6_0_0_, user3_.user_id as user_id1_0_1_, user3_.email as email2_0_1_, user3_.first_name as first_na3_0_1_, user3_.last_name as last_nam4_0_1_, user3_.password as password5_0_1_, user3_.username as username6_0_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:31:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_2_2_, post0_.content as content2_2_2_, post0_.user_id as user_id3_2_2_, likes1_.post_id as post_id1_1_4_, user2_.user_id as user_id2_1_4_, user2_.user_id as user_id1_0_0_, user2_.email as email2_0_0_, user2_.first_name as first_na3_0_0_, user2_.last_name as last_nam4_0_0_, user2_.password as password5_0_0_, user2_.username as username6_0_0_, user3_.user_id as user_id1_0_1_, user3_.email as email2_0_1_, user3_.first_name as first_na3_0_1_, user3_.last_name as last_nam4_0_1_, user3_.password as password5_0_1_, user3_.username as username6_0_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_0_, user_.first_name as first_na3_0_, user_.last_name as last_nam4_0_, user_.password as password5_0_, user_.username as username6_0_ from users user_ where user_.user_id=?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:31:09 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f486211]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a479fda]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a6631b]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@472d0f4]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bc59b27]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:31:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:31:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:31:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

2021-11-02 11:31:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_, user0_.username as username6_0_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d7a64ca]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6418e39e]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3635099]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1da1380b]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1095d23a]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:31:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:31:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:31:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

2021-11-02 11:31:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_, user0_.username as username6_0_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:31:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_0_1_, user0_.email as email2_0_1_, user0_.first_name as first_na3_0_1_, user0_.last_name as last_nam4_0_1_, user0_.password as password5_0_1_, user0_.username as username6_0_1_, posts1_.user_id as user_id3_2_3_, posts1_.post_id as post_id1_2_3_, posts1_.post_id as post_id1_2_0_, posts1_.content as content2_2_0_, posts1_.user_id as user_id3_2_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:31:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_0_1_, user0_.email as email2_0_1_, user0_.first_name as first_na3_0_1_, user0_.last_name as last_nam4_0_1_, user0_.password as password5_0_1_, user0_.username as username6_0_1_, posts1_.user_id as user_id3_2_3_, posts1_.post_id as post_id1_2_3_, posts1_.post_id as post_id1_2_0_, posts1_.content as content2_2_0_, posts1_.user_id as user_id3_2_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1946384]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac4c3f7]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60743cdb]
2021-11-02 11:31:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:31:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:31:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}

2021-11-02 11:31:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_1_0_, likeposts0_.post_id as post_id1_1_0_, post1_.post_id as post_id1_2_1_, post1_.content as content2_2_1_, post1_.user_id as user_id3_2_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66fbc5e7]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9accff0]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1039bfc4]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f85217c]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:31:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:31:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:31:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}

2021-11-02 11:31:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_2_0_, posts0_.post_id as post_id1_2_0_, posts0_.post_id as post_id1_2_1_, posts0_.content as content2_2_1_, posts0_.user_id as user_id3_2_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e700eba]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6436e181]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65ef48f2]
2021-11-02 11:31:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36068727]
2021-11-02 11:31:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:31:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:31:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:31:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_0_1_}

2021-11-02 11:31:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_1_0_, likes0_.user_id as user_id2_1_0_, user1_.user_id as user_id1_0_1_, user1_.email as email2_0_1_, user1_.first_name as first_na3_0_1_, user1_.last_name as last_nam4_0_1_, user1_.password as password5_0_1_, user1_.username as username6_0_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:31:09 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:31:09 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:31:09 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:31:09 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:31:09 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:31:09 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:31:09 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:31:09 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3946075
2021-11-02 11:31:09 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 51185a50-f456-4c83-bab4-4c75651520c1 (<unnamed>)
2021-11-02 11:31:09 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:31:09 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:31:09 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:31:09 DEBUG TransactionImpl:84 - begin
2021-11-02 11:31:09 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:31:09 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:31:09 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2102)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1835)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeUpdate(AbstractJdbc2Statement.java:334)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:31:09 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:31:09 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:32:45 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:32:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:32:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:32:45 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:32:45 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:32:45 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:32:45 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:32:45 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:32:45 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:32:46 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:32:46 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:32:46 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:32:46 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:32:46 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:32:46 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40e10ff8
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@366ef90e
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4b3c354a
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@69637b10
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@69637b10
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@470a696f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@470a696f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@3e8f7922
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e8f7922
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1de5f0ef
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ef0d29e
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@2c3dec30
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2c3dec30
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@6731787b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6731787b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@19fe4644
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19fe4644
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48c35007
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48c35007
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3a94964
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3a94964
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@107ed6fc
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@107ed6fc
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@297ea53a
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@297ea53a
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3efe7086
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3efe7086
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcec031
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcec031
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@76ba13c
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@76ba13c
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@319988b0
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@319988b0
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4ebea12c
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52b56a3e
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@5241cf67
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5241cf67
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@72bd06ca
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72bd06ca
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a1da881
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a1da881
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@3f2ef586
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3f2ef586
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5d465e4b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@35beb15e
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@2c9399a4
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@60fa3495
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1849db1a
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@1d71006f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d71006f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3ebff828
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2484f433
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2484f433
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@495083a0
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@495083a0
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@66629f63
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6c345c5f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6e521c1e
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@40dd3977
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40dd3977
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:32:46 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:32:46 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:32:46 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:32:46 DEBUG pooling:143 - No driver class specified
2021-11-02 11:32:46 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:32:46 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:32:46 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:32:46 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:32:46 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:32:46 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:32:46 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:32:46 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:32:46 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:32:46 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:32:47 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:32:47 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2116b68b
2021-11-02 11:32:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2116b68b
2021-11-02 11:32:47 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:32:47 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b56f5f8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79d743e6]
2021-11-02 11:32:47 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:32:47 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:32:47 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=users}, physicalName=Name{catalog=null, schema=users}]
2021-11-02 11:32:47 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:32:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:32:47 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:32:47 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:32:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:32:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:32:47 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:32:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:32:47 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:32:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:32:47 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:32:47 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:32:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:32:47 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:32:47 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users.users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:32:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:32:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:32:47 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:32:47 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:32:47 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:32:47 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:32:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:32:47 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:32:47 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:32:47 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:32:47 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:32:47 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:32:47 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:32:47 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:32:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:32:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:32:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:32:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:32:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:32:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:32:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:32:47 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:32:47 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:32:47 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:32:47 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:32:47 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:32:47 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:32:47 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:32:47 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:32:47 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:32:47 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:32:47 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:32:47 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:32:47 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:32:47 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:32:47 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:32:47 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:32:47 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:32:47 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:32:47 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:32:47 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:32:47 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:32:47 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:32:47 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:32:47 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:32:47 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:32:47 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:32:47 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:32:47 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:32:47 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:32:47 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:32:47 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:32:47 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:32:47 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:32:47 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:32:47 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:32:47 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:32:47 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:32:47 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:32:47 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:32:47 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:32:47 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:32:47 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:32:47 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:32:47 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:32:47 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:32:47 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:32:47 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:32:47 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:32:47 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:32:47 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:32:47 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:32:47 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:32:47 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:32:47 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:32:47 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:32:47 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:32:47 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:32:47 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:32:47 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:32:47 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:32:47 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:32:47 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:32:47 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:32:47 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@22587507, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:32:47 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:32:47 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:32:47 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:32:47 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:32:47 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:32:47 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:32:47 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:32:47 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:32:47 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:32:47 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:32:47 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:32:47 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:32:47 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:32:47 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:32:47 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:32:47 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b56f5f8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7c011174]
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:32:47 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:32:47 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_2_, post_.user_id as user_id3_2_ from posts post_ where post_.post_id=?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160b4809]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16d07cf3]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67fb5025]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8e25d3f]
2021-11-02 11:32:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:32:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:32:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}

2021-11-02 11:32:47 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.content as content2_2_0_, post0_.user_id as user_id3_2_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5934ca1e]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@477021ee]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2180e789]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9bbd9d]
2021-11-02 11:32:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:32:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:32:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}

2021-11-02 11:32:47 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_2_0_, post0_.content as content2_2_0_, post0_.user_id as user_id3_2_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:32:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_2_2_, post0_.content as content2_2_2_, post0_.user_id as user_id3_2_2_, likes1_.post_id as post_id1_1_4_, user2_.user_id as user_id2_1_4_, user2_.user_id as user_id1_0_0_, user2_.email as email2_0_0_, user2_.first_name as first_na3_0_0_, user2_.last_name as last_nam4_0_0_, user2_.password as password5_0_0_, user2_.username as username6_0_0_, user3_.user_id as user_id1_0_1_, user3_.email as email2_0_1_, user3_.first_name as first_na3_0_1_, user3_.last_name as last_nam4_0_1_, user3_.password as password5_0_1_, user3_.username as username6_0_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users.users user2_ on likes1_.user_id=user2_.user_id left outer join users.users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:32:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_2_2_, post0_.content as content2_2_2_, post0_.user_id as user_id3_2_2_, likes1_.post_id as post_id1_1_4_, user2_.user_id as user_id2_1_4_, user2_.user_id as user_id1_0_0_, user2_.email as email2_0_0_, user2_.first_name as first_na3_0_0_, user2_.last_name as last_nam4_0_0_, user2_.password as password5_0_0_, user2_.username as username6_0_0_, user3_.user_id as user_id1_0_1_, user3_.email as email2_0_1_, user3_.first_name as first_na3_0_1_, user3_.last_name as last_nam4_0_1_, user3_.password as password5_0_1_, user3_.username as username6_0_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users.users user2_ on likes1_.user_id=user2_.user_id left outer join users.users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users.users where user_id =?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_0_, user_.first_name as first_na3_0_, user_.last_name as last_nam4_0_, user_.password as password5_0_, user_.username as username6_0_ from users.users user_ where user_.user_id=?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users.users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:394 -  Update 0: update users.users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users.users where user_id=?
2021-11-02 11:32:47 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users.users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d4d979]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c25cfe1]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3c112a]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a140ce5]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f71194d]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:32:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:32:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:32:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

2021-11-02 11:32:47 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_, user0_.username as username6_0_0_ from users.users user0_ where user0_.user_id=?
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db99785]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a083b96]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da4feeb]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:32:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:32:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:32:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

2021-11-02 11:32:47 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_0_0_, user0_.email as email2_0_0_, user0_.first_name as first_na3_0_0_, user0_.last_name as last_nam4_0_0_, user0_.password as password5_0_0_, user0_.username as username6_0_0_ from users.users user0_ where user0_.user_id=?
2021-11-02 11:32:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_0_1_, user0_.email as email2_0_1_, user0_.first_name as first_na3_0_1_, user0_.last_name as last_nam4_0_1_, user0_.password as password5_0_1_, user0_.username as username6_0_1_, posts1_.user_id as user_id3_2_3_, posts1_.post_id as post_id1_2_3_, posts1_.post_id as post_id1_2_0_, posts1_.content as content2_2_0_, posts1_.user_id as user_id3_2_0_ from users.users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:32:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_0_1_, user0_.email as email2_0_1_, user0_.first_name as first_na3_0_1_, user0_.last_name as last_nam4_0_1_, user0_.password as password5_0_1_, user0_.username as username6_0_1_, posts1_.user_id as user_id3_2_3_, posts1_.post_id as post_id1_2_3_, posts1_.post_id as post_id1_2_0_, posts1_.content as content2_2_0_, posts1_.user_id as user_id3_2_0_ from users.users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e5b621b]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10177794]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fb8bad0]
2021-11-02 11:32:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:32:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:32:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}

2021-11-02 11:32:47 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_1_0_, likeposts0_.post_id as post_id1_1_0_, post1_.post_id as post_id1_2_1_, post1_.content as content2_2_1_, post1_.user_id as user_id3_2_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f97bc14]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d8f4ed]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b9ac754]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e002356]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:32:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:32:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:32:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}

2021-11-02 11:32:47 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_2_0_, posts0_.post_id as post_id1_2_0_, posts0_.post_id as post_id1_2_1_, posts0_.content as content2_2_1_, posts0_.user_id as user_id3_2_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79ba0a6f]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@261de205]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ce12fbb]
2021-11-02 11:32:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4525e9e8]
2021-11-02 11:32:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:32:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:32:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:32:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_0_1_}

2021-11-02 11:32:47 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_1_0_, likes0_.user_id as user_id2_1_0_, user1_.user_id as user_id1_0_1_, user1_.email as email2_0_1_, user1_.first_name as first_na3_0_1_, user1_.last_name as last_nam4_0_1_, user1_.password as password5_0_1_, user1_.username as username6_0_1_ from post_likes_junction likes0_ inner join users.users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:32:47 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:32:47 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:32:47 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:32:47 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:32:47 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:32:47 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:32:47 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:32:47 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@480cbe2e
2021-11-02 11:32:47 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1fb7cccc-5ae5-4e4e-a515-27bb8ae56d08 (<unnamed>)
2021-11-02 11:32:47 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:32:47 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:32:47 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:32:47 DEBUG TransactionImpl:84 - begin
2021-11-02 11:32:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:32:47 DEBUG SQL:94 - 
    insert 
    into
        users.users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:32:47 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users.users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:32:47 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:32:47 ERROR SqlExceptionHelper:142 - ERROR: relation "users.users" does not exist
  Position: 13
2021-11-02 11:34:35 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:34:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:34:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:34:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:34:36 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:34:36 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:34:36 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:34:36 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:34:36 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:34:36 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:34:36 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:34:36 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:34:36 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:34:36 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:34:36 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40e10ff8
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@366ef90e
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4b3c354a
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@69637b10
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@69637b10
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@470a696f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@470a696f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@3e8f7922
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e8f7922
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1de5f0ef
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ef0d29e
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@2c3dec30
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2c3dec30
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@6731787b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6731787b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@19fe4644
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19fe4644
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48c35007
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48c35007
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3a94964
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3a94964
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@107ed6fc
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@107ed6fc
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@297ea53a
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@297ea53a
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3efe7086
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3efe7086
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcec031
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcec031
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@76ba13c
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@76ba13c
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@319988b0
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@319988b0
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4ebea12c
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52b56a3e
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@5241cf67
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5241cf67
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@72bd06ca
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72bd06ca
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a1da881
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a1da881
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@3f2ef586
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3f2ef586
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5d465e4b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@35beb15e
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@2c9399a4
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@60fa3495
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1849db1a
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@1d71006f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d71006f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3ebff828
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2484f433
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2484f433
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@495083a0
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@495083a0
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@66629f63
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6c345c5f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6e521c1e
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@40dd3977
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40dd3977
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:34:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:34:36 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:34:36 DEBUG pooling:143 - No driver class specified
2021-11-02 11:34:36 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:34:36 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:34:36 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:34:36 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:34:36 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:34:37 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:34:37 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:34:37 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:34:37 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:34:37 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:34:37 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2116b68b
2021-11-02 11:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2116b68b
2021-11-02 11:34:37 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:34:37 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b56f5f8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79d743e6]
2021-11-02 11:34:37 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:34:37 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:34:37 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:34:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:34:37 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:34:37 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:34:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:34:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:34:37 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:34:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:34:37 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:34:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:34:37 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:34:37 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:34:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:34:37 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:34:37 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:34:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:34:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:34:37 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:34:37 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:34:37 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:34:37 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:34:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:34:37 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:34:37 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:34:37 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:34:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:34:37 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:34:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:34:37 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:34:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:34:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:34:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:34:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:34:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:34:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:34:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:34:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:34:37 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:34:37 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:34:37 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:34:37 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:34:37 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:34:37 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:34:37 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:34:37 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:34:37 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:34:37 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:34:37 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:34:37 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:34:37 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:34:37 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:34:37 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:34:37 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:34:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:34:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:34:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:34:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:34:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:34:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:34:37 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:34:37 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:34:37 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:34:37 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:34:37 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:34:37 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:34:37 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:34:37 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:34:37 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:34:37 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:34:37 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:34:37 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:34:37 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:34:37 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:34:37 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:34:37 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:34:37 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:34:37 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:34:37 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:34:37 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:34:37 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:34:37 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:34:37 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:34:37 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:34:37 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:34:37 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:34:37 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:34:37 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:34:37 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:34:37 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:34:37 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:34:37 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:34:37 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:34:37 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:34:37 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:34:37 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:34:37 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:34:37 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:34:37 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:34:37 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:34:37 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@22587507, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:34:37 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:34:37 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:34:37 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:34:37 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:34:37 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:34:37 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:34:37 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:34:37 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:34:37 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:34:37 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:34:37 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:34:37 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:34:37 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:34:37 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:34:37 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:34:37 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b56f5f8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7c011174]
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:34:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:34:37 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160b4809]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16d07cf3]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67fb5025]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8e25d3f]
2021-11-02 11:34:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:34:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:34:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:34:37 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5934ca1e]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@477021ee]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2180e789]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9bbd9d]
2021-11-02 11:34:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:34:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:34:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:34:37 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:34:37 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:34:37 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:34:37 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d4d979]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c25cfe1]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3c112a]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a140ce5]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f71194d]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:34:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:34:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:34:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:34:37 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db99785]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a083b96]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da4feeb]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:34:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:34:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:34:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:34:37 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:34:37 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:34:37 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e5b621b]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10177794]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fb8bad0]
2021-11-02 11:34:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:34:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:34:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:34:37 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f97bc14]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d8f4ed]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b9ac754]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e002356]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:34:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:34:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:34:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:34:37 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79ba0a6f]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@261de205]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ce12fbb]
2021-11-02 11:34:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4525e9e8]
2021-11-02 11:34:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:34:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:34:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:34:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:34:37 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:34:37 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:34:37 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:34:37 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:34:37 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:34:37 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:34:37 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:34:37 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:34:37 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@480cbe2e
2021-11-02 11:34:37 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: fd29b0bb-8633-47e7-8ccc-639e9d01f1c2 (<unnamed>)
2021-11-02 11:34:37 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:34:37 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:34:37 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:34:37 DEBUG TransactionImpl:84 - begin
2021-11-02 11:34:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:34:37 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:34:38 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:34:38 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:34:38 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:35:02 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:35:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:35:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:35:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:35:02 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:35:02 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:35:02 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:35:02 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:35:02 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:35:02 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:35:02 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:35:02 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:35:02 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:35:02 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:35:02 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305f7627
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40e10ff8
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@366ef90e
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4b3c354a
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b5894c8
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72445aba
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56276db8
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20b5f2ac
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@47dbb1e2
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@773f7880
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@773cbf4f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@69637b10
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@69637b10
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@470a696f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@470a696f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@3e8f7922
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e8f7922
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1de5f0ef
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ef0d29e
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@2c3dec30
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2c3dec30
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@6731787b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6731787b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@19fe4644
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19fe4644
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48c35007
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48c35007
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3a94964
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3a94964
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@107ed6fc
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@107ed6fc
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@297ea53a
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@297ea53a
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3efe7086
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3efe7086
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcec031
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@bcec031
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@76ba13c
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@76ba13c
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@319988b0
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@319988b0
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e16b8b5
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4ebea12c
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c1b9e4b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52b56a3e
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@5241cf67
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5241cf67
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@72bd06ca
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72bd06ca
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a1da881
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a1da881
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@3f2ef586
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3f2ef586
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5d465e4b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@2a65bb85
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@184497d1
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@35beb15e
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@2c9399a4
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@172ca72b
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60d8c0dc
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@60fa3495
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1849db1a
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@1d71006f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d71006f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3ebff828
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2484f433
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2484f433
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@495083a0
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@495083a0
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@66629f63
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6c345c5f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6e521c1e
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@40dd3977
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40dd3977
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:35:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:35:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:35:02 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:35:02 DEBUG pooling:143 - No driver class specified
2021-11-02 11:35:02 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:35:02 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:35:02 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:35:02 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:35:02 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:35:03 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:35:03 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:35:03 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:35:03 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:35:03 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:35:03 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:35:03 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2116b68b
2021-11-02 11:35:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2116b68b
2021-11-02 11:35:03 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4e76dac
2021-11-02 11:35:03 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b56f5f8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79d743e6]
2021-11-02 11:35:03 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:35:03 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:35:03 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:35:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:35:03 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:35:03 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:35:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:35:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:35:03 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:35:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:35:03 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:35:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:35:03 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:35:03 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:35:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:35:03 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:35:03 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:35:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:35:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:35:03 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:35:03 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:35:03 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:35:03 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:35:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:35:03 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:35:03 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:35:03 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:35:03 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:35:03 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:35:03 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:03 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:35:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:35:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:35:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:35:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:35:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:35:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:35:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:35:03 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:35:03 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:35:03 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:35:03 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:35:03 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:35:03 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:35:03 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:35:03 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:35:03 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:35:03 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:35:03 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:35:03 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:35:03 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:35:03 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:35:03 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:35:03 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:35:03 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:35:03 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:35:03 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:35:03 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:35:03 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:35:03 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:35:03 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:35:03 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:35:03 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:35:03 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:35:03 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:35:03 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:35:03 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:35:03 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:35:03 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:35:03 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:35:03 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:35:03 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:35:03 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:35:03 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:35:03 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:35:03 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:35:03 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:35:03 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:35:03 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:35:03 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:35:03 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:35:03 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:35:03 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:35:03 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:35:03 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:35:03 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:35:03 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:35:03 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:35:03 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:35:03 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:35:03 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:35:03 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:35:03 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:35:03 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:35:03 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:35:03 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:35:03 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:35:03 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:35:03 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:35:03 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:35:03 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:35:03 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@22587507, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:35:03 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:35:03 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:35:03 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:35:03 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:35:03 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:35:03 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:35:03 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:35:04 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:35:04 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:35:04 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:35:04 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:35:04 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:35:04 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:35:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:35:04 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:35:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b56f5f8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7c011174]
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:35:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:35:04 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160b4809]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16d07cf3]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67fb5025]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8e25d3f]
2021-11-02 11:35:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:35:04 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5934ca1e]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@477021ee]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2180e789]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9bbd9d]
2021-11-02 11:35:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:35:04 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:35:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:35:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:35:04 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d4d979]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c25cfe1]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3c112a]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a140ce5]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f71194d]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:35:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:35:04 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@db99785]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a083b96]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da4feeb]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:35:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:35:04 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:35:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:35:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e5b621b]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10177794]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fb8bad0]
2021-11-02 11:35:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:35:04 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f97bc14]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d8f4ed]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b9ac754]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e002356]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:35:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:35:04 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79ba0a6f]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@261de205]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ce12fbb]
2021-11-02 11:35:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4525e9e8]
2021-11-02 11:35:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:35:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:35:04 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:35:04 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:35:04 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:35:04 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:35:04 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:35:04 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:35:04 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:35:04 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:35:04 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@480cbe2e
2021-11-02 11:35:04 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 039d3ecd-b8f3-426b-9eab-c307baf23334 (<unnamed>)
2021-11-02 11:35:04 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:35:04 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:35:04 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:35:04 DEBUG TransactionImpl:84 - begin
2021-11-02 11:35:04 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:35:04 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:35:04 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:35:04 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:35:04 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:35:50 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:35:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:35:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:35:50 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:35:50 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:35:50 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:35:50 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:35:50 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:35:50 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:35:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:35:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:35:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:35:51 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:35:51 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:35:51 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@1e63ec0b
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@1e63ec0b
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e63ec0b
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7894f09b
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@242aa8d9
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@11eadcba
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@654d8173
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@654d8173
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@654d8173
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@239b0f9d
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@239b0f9d
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@239b0f9d
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@650eab8
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@650eab8
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@650eab8
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@f0e995e
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@f0e995e
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f0e995e
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@50fe837a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@50fe837a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@50fe837a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@1623134f
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@1623134f
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1623134f
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ad10c1a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ad10c1a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ad10c1a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3f363cf5
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3f363cf5
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2453f95d
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2453f95d
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4f071df8
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f071df8
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@305f7627
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62435e70
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@275fe372
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@275fe372
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@31e75d13
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@31e75d13
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@350ec41e
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@350ec41e
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2364305a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2364305a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ddabb18
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ddabb18
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@28d6290
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@28d6290
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77602954
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77602954
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@40258c2f
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@40258c2f
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6a66a204
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6a66a204
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@67389cb8
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67389cb8
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@4bf3798b
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4bf3798b
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@46f699d5
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@46f699d5
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@46f699d5
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c6daf0
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@7db82169
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7db82169
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7db82169
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31e3250d
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@24fb6a80
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24fb6a80
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@b40bb6e
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b40bb6e
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@346a361
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@346a361
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@132ddbab
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@132ddbab
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62e70ea3
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62e70ea3
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2ed3b1f5
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@24faea88
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@24faea88
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@24faea88
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@545de5a4
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@545de5a4
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@545de5a4
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@274872f8
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@180e6ac4
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@68759011
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@68759011
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@68759011
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@43b4fe19
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@43b4fe19
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@43b4fe19
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@2a1edad4
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@235f4c10
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@4eed46ee
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4eed46ee
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6326d182
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@5dbe30be
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5dbe30be
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2f058b8a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2f058b8a
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@76c7beb3
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7b139eab
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@117e0fe5
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6c67e137
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6c67e137
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53ab0286
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63c5efee
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d10e0b1
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c98290c
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@172ca72b
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5bda80bf
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71e5f61d
2021-11-02 11:35:51 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ce86164
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:35:51 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:35:51 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:35:51 DEBUG pooling:143 - No driver class specified
2021-11-02 11:35:51 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:35:51 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:35:51 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:35:51 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:35:51 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:35:51 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:35:51 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:35:51 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:35:51 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:35:51 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:35:52 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:35:52 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1237e0be
2021-11-02 11:35:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1237e0be
2021-11-02 11:35:52 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@62e70ea3
2021-11-02 11:35:52 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58d63b16] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c4fc2bf]
2021-11-02 11:35:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:35:52 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:35:52 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:35:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:35:52 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:35:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:35:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:35:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:35:52 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:35:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:35:52 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:35:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:35:52 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:35:52 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:35:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:35:52 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:35:52 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:35:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:35:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:35:52 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:35:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:35:52 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:35:52 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:35:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:35:52 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:35:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:35:52 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:35:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:35:52 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:35:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:35:52 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:35:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:35:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:35:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:35:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:35:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:35:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:35:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:35:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:35:52 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:35:52 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:35:52 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:35:52 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:35:52 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:35:52 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:35:52 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:35:52 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:35:52 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:35:52 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:35:52 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:35:52 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:35:52 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:35:52 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:35:52 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:35:52 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:35:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:35:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:35:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:35:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:35:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:35:52 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:35:52 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:35:52 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:35:52 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:35:52 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:35:52 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:35:52 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:35:52 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:35:52 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:35:52 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:35:52 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:35:52 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:35:52 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:35:52 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:35:52 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:35:52 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:35:52 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:35:52 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:35:52 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:35:52 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:35:52 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:35:52 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:35:52 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:35:52 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:35:52 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:35:52 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:35:52 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:35:52 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:35:52 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:35:52 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:35:52 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:35:52 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:35:52 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:35:52 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:35:52 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:35:52 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:35:52 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:35:52 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:35:52 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:35:52 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:35:52 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:35:52 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4b6d92e, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:35:52 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:35:52 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:35:52 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:35:52 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:35:52 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:35:52 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:35:52 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:35:52 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:35:52 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:35:52 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:35:52 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:35:52 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:35:52 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:35:52 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:35:52 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:35:52 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58d63b16] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3c854752]
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:35:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:35:52 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c6a5192]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ecda95b]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@357bc488]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7573b9ee]
2021-11-02 11:35:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:35:52 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e900e1a]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50085d9c]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5df7e31b]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a9c661]
2021-11-02 11:35:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:35:52 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:35:52 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:35:52 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:35:52 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bd3eff4]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5934ca1e]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5348d83c]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@477021ee]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2180e789]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:35:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:35:52 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9bbd9d]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d3e3085]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ba42204]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@285005b8]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b1efaaf]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:35:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:35:52 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:35:52 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:35:52 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7459a21e]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eeb38b2]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30aec673]
2021-11-02 11:35:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:35:52 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@236fdf]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16e99306]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@531ec978]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@93501be]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:35:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:35:52 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d3c112a]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a140ce5]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70716259]
2021-11-02 11:35:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:35:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:35:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:35:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:35:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:35:52 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:35:52 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:35:52 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:35:52 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:35:52 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:35:52 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:35:52 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:35:52 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:35:52 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f6cc7da
2021-11-02 11:35:52 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1cc326e3-0957-454f-b538-d254272abc2f (<unnamed>)
2021-11-02 11:35:52 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:35:52 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:35:52 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:35:52 DEBUG TransactionImpl:84 - begin
2021-11-02 11:35:52 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:35:52 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:35:52 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:35:52 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:35:52 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:36:36 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:36:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:36:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:36:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:36:36 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:36:36 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:36:36 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:36:36 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:36:36 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:36:36 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:36:36 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:36:36 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:36:36 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:36:36 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:36:36 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26a4842b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31e75d13
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@73ff4fae
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28d6290
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51850751
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6256ac4f
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed46ee
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a90fa8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac86ba5
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@9635fa
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@79e18e38
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1ca25c47
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33352f32
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27a5328c
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65e61854
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d5d9e5
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8792db
2021-11-02 11:36:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:36:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:36:36 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:36:36 DEBUG pooling:143 - No driver class specified
2021-11-02 11:36:36 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:36:36 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:36:36 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:36:36 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:36:36 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:36:37 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:36:37 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:36:37 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:36:37 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:36:37 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:36:37 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:36:37 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@616b241a
2021-11-02 11:36:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@616b241a
2021-11-02 11:36:37 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:36:37 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@776802b0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64c4c01]
2021-11-02 11:36:37 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:36:37 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:36:37 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:36:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:36:37 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:36:37 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:36:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:36:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:36:37 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:36:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:36:37 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:36:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:36:37 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:36:37 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:36:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:36:37 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:36:37 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:36:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:36:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:36:37 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:36:37 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:36:37 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:36:37 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:36:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:36:37 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:36:37 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:36:37 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:36:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:36:37 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:36:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:36:37 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:36:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:36:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:36:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:36:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:36:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:36:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:36:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:36:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:36:37 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:36:37 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:36:37 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:36:37 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:36:37 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:36:37 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:36:37 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:36:37 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:36:37 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:36:37 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:36:37 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:36:37 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:36:37 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:36:37 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:36:37 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:36:37 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:36:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:36:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:36:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:36:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:36:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:36:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:36:37 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:36:37 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:36:37 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:36:37 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:36:37 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:36:37 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:36:37 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:36:37 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:36:37 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:36:37 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:36:37 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:36:37 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:36:37 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:36:37 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:36:37 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:36:37 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:36:37 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:36:37 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:36:37 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:36:37 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:36:37 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:36:37 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:36:37 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:36:37 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:36:37 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:36:37 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:36:37 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:36:37 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:36:37 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:36:37 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:36:37 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:36:37 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:36:37 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:36:37 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:36:37 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:36:37 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:36:37 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:36:37 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:36:37 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:36:37 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:36:37 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@22587507, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:36:37 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:36:37 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:36:37 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:36:37 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:36:37 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:36:37 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:36:37 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:36:37 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:36:37 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:36:37 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:36:37 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:36:37 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:36:37 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:36:37 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:36:37 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:36:37 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@776802b0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@480b57e2]
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:36:37 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:36:37 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:36:37 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:36:37 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:36:37 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:36:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:36:37 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:36:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:36:37 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664e848c]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c977dcf]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@392781e]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b18230]
2021-11-02 11:36:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:36:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:36:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:36:38 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@477021ee]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e9bbd9d]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b87074a]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3e3085]
2021-11-02 11:36:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:36:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:36:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:36:38 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:36:38 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:36:38 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:36:38 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:36:38 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:36:38 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:36:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:36:38 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:36:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:36:38 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c25cfe1]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a140ce5]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f71194d]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@db99785]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70716259]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:36:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:36:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:36:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:36:38 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:36:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:36:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:36:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:36:38 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:36:38 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:36:38 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e5c2463]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76437e9b]
2021-11-02 11:36:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:36:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:36:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:36:38 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3434a4f0]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79afa369]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f820f42]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b325930]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:36:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:36:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:36:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:36:38 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f3fc42f]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a1a012]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@443a53df]
2021-11-02 11:36:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c33da7a]
2021-11-02 11:36:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:36:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:36:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:36:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:36:38 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:36:38 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:36:38 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:36:38 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:36:38 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:36:38 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:36:38 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:36:38 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:36:38 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@110e9982
2021-11-02 11:36:38 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: a9cca764-875d-4de1-9a31-10bdcdf32826 (<unnamed>)
2021-11-02 11:36:38 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:36:38 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:36:38 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:36:38 DEBUG TransactionImpl:84 - begin
2021-11-02 11:36:38 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:36:38 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:36:38 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:36:38 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:36:38 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:37:59 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:37:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:37:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:37:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:37:59 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:37:59 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:37:59 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:37:59 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:37:59 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:37:59 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:37:59 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:37:59 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:37:59 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:37:59 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:37:59 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4f071df8
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4f071df8
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f071df8
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ed731d0
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40e10ff8
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@366ef90e
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b968a76
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b968a76
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b968a76
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@7829b776
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@7829b776
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7829b776
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@458342d3
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@458342d3
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@458342d3
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@36676c1a
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@36676c1a
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36676c1a
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@293d0107
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@293d0107
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@293d0107
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@55e8ec2f
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@55e8ec2f
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55e8ec2f
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4c51bb7
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4c51bb7
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c51bb7
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d3430a7
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d3430a7
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5536379e
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5536379e
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2b491fee
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b491fee
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e8f7922
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1de5f0ef
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3ce3db41
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ce3db41
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7c56e013
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7c56e013
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@f74e835
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f74e835
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7383eae2
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7383eae2
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18f20260
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18f20260
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@631e06ab
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@631e06ab
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e029d61
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e029d61
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@267f474e
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@267f474e
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24faea88
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24faea88
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@4648ce9
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4648ce9
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@42b64ab8
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@42b64ab8
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@305f031
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@305f031
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@305f031
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e16b8b5
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@7fcbe147
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7fcbe147
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7fcbe147
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@757d6814
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@36b0fcd5
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36b0fcd5
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@226642a5
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@226642a5
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4fe89c24
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4fe89c24
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@165b8a71
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@165b8a71
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@64337702
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@64337702
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4e76dac
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@52500920
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@52500920
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@52500920
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4215838f
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4215838f
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4215838f
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@26fb628
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@35beb15e
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@53ab0286
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@53ab0286
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@53ab0286
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ce86164
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ce86164
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ce86164
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@60d8c0dc
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@60fa3495
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@89ff02e
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@89ff02e
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d71006f
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@3624da92
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3624da92
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@60bdf15d
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@60bdf15d
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@495083a0
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@66629f63
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3af17be2
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@31024624
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31024624
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@40dd3977
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a4e343
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a1d204a
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@62dae245
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:37:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:37:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:37:59 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:37:59 DEBUG pooling:143 - No driver class specified
2021-11-02 11:37:59 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:37:59 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:37:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:37:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:37:59 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:38:00 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:38:00 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:38:00 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:38:00 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:38:00 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:38:00 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:38:00 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2a1debfa
2021-11-02 11:38:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2a1debfa
2021-11-02 11:38:00 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@64337702
2021-11-02 11:38:00 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47ec7422] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48535004]
2021-11-02 11:38:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:38:01 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:38:01 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:38:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:38:01 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:38:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:38:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:38:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:38:01 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:38:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:38:01 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:38:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:38:01 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:38:01 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:38:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:38:01 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:38:01 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:38:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:38:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:38:01 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:38:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:38:01 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:38:01 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:38:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:38:01 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:38:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:38:01 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:38:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:38:01 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:38:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:01 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:38:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:38:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:38:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:38:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:38:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:38:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:38:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:38:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:38:01 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:38:01 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:38:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:38:01 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:38:01 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:38:01 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:38:01 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:38:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:38:01 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:38:01 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:38:01 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:38:01 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:38:01 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:38:01 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:38:01 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:38:01 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:38:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:38:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:38:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:38:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:38:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:38:01 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:38:01 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:38:01 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:38:01 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:38:01 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:38:01 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:38:01 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:38:01 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:38:01 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:38:01 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:38:01 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:38:01 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:38:01 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:38:01 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:38:01 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:38:01 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:38:01 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:38:01 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:38:01 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:38:01 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:38:01 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:38:01 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:38:01 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:38:01 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:38:01 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:38:01 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:38:01 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:38:01 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:38:01 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:38:01 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:38:01 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:38:01 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:38:01 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:38:01 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:38:01 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:38:01 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:38:01 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:38:01 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:38:01 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:38:01 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:38:01 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:38:01 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\5.4.2.Final\hibernate-validator-5.4.2.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@587a1cfb, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:38:01 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:38:01 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:38:01 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47ec7422] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@54e3658c]
2021-11-02 11:38:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:38:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:38:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:38:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:38:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:38:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:38:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:38:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:38:01 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6968c1d6]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60e3c26e]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73a0f2b]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@687e6293]
2021-11-02 11:38:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:38:01 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448b808a]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46e190ed]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383c3eb3]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20ab76ee]
2021-11-02 11:38:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:38:01 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:38:01 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:38:01 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:38:01 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@91f565d]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b83459e]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32118208]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@414f87a9]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ddc6db2]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:38:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:38:01 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cd26422]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fa21d49]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@416d56f2]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e31d989]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b01a0d]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:38:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:38:01 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:38:01 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:38:01 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c889805]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77db3d02]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cffcc61]
2021-11-02 11:38:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:38:01 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53d9826f]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e84f3c8]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64f9f455]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d5a51b1]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:38:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:38:01 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74834afd]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75fd65c]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42d6c12d]
2021-11-02 11:38:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b42121d]
2021-11-02 11:38:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:38:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:38:01 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:38:01 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:38:01 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:38:01 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:38:01 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:38:01 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:38:01 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:38:01 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:38:01 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@664212ab
2021-11-02 11:38:01 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 948e5939-0c12-4122-8175-8dac5cc8c20d (<unnamed>)
2021-11-02 11:38:01 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:38:01 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:38:01 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:38:01 DEBUG TransactionImpl:84 - begin
2021-11-02 11:38:01 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:38:01 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:38:01 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:38:01 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:38:01 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:38:11 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:38:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:38:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:38:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:38:11 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:38:11 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:38:12 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:38:12 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:38:12 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:38:12 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:38:12 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:38:12 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:38:12 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:38:12 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:38:12 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4f071df8
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4f071df8
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f071df8
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ed731d0
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@40e10ff8
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@366ef90e
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b968a76
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b968a76
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b968a76
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@7829b776
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@7829b776
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7829b776
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@458342d3
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@458342d3
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@458342d3
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@36676c1a
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@36676c1a
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36676c1a
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@293d0107
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@293d0107
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@293d0107
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@55e8ec2f
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@55e8ec2f
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55e8ec2f
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4c51bb7
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4c51bb7
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c51bb7
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d3430a7
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d3430a7
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5536379e
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5536379e
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2b491fee
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b491fee
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e8f7922
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1de5f0ef
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3ce3db41
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ce3db41
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7c56e013
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7c56e013
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@f74e835
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f74e835
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7383eae2
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7383eae2
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18f20260
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18f20260
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@631e06ab
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@631e06ab
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e029d61
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e029d61
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@267f474e
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@267f474e
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24faea88
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24faea88
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@4648ce9
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4648ce9
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@42b64ab8
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@42b64ab8
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@305f031
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@305f031
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@305f031
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6e16b8b5
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@7fcbe147
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7fcbe147
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7fcbe147
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@757d6814
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@36b0fcd5
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36b0fcd5
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@226642a5
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@226642a5
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4fe89c24
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4fe89c24
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@165b8a71
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@165b8a71
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@64337702
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@64337702
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4e76dac
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@52500920
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@52500920
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@52500920
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4215838f
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4215838f
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4215838f
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@26fb628
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@35beb15e
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@53ab0286
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@53ab0286
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@53ab0286
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ce86164
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ce86164
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ce86164
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@60d8c0dc
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@60fa3495
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@89ff02e
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@89ff02e
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d71006f
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@3624da92
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3624da92
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@60bdf15d
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@60bdf15d
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@495083a0
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@66629f63
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3af17be2
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@31024624
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@31024624
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@40dd3977
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a4e343
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a1d204a
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@62dae245
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b6579e8
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fff253c
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:38:12 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:38:12 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:38:12 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:38:12 DEBUG pooling:143 - No driver class specified
2021-11-02 11:38:12 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:38:12 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:38:12 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:38:12 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:38:12 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:38:12 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:38:12 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:38:12 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:38:12 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:38:12 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:38:13 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:38:13 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2a1debfa
2021-11-02 11:38:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@2a1debfa
2021-11-02 11:38:13 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@64337702
2021-11-02 11:38:13 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47ec7422] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48535004]
2021-11-02 11:38:13 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:38:13 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:38:13 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:38:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:38:13 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:38:13 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:38:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:38:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:38:13 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:38:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:38:13 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:38:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:38:13 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:38:13 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:38:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:38:13 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:38:13 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:38:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:38:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:38:13 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:38:13 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:38:13 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:38:13 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:38:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:38:13 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:38:13 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:38:13 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:38:13 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:38:13 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:38:13 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:38:13 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:38:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:38:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:38:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:38:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:38:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:38:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:38:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:38:13 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:38:13 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:38:13 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:38:13 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:38:13 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:38:13 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:38:13 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:38:13 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:38:13 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:38:13 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:38:13 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:38:13 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:38:13 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:38:13 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:38:13 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:38:13 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:38:13 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:38:13 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:38:13 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:38:13 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:38:13 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:38:13 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:38:13 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:38:13 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:38:13 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:38:13 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:38:13 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:38:13 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:38:13 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:38:13 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:38:13 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:38:13 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:38:13 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:38:13 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:38:13 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:38:13 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:38:13 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:38:13 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:38:13 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:38:13 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:38:13 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:38:13 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:38:13 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:38:13 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:38:13 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:38:13 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:38:13 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:38:13 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:38:13 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:38:13 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:38:13 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:38:13 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:38:13 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:38:13 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:38:13 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:38:13 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:38:13 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:38:13 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:38:13 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:38:13 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:38:13 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:38:13 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:38:13 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:38:13 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@587a1cfb, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:38:13 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:38:13 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:38:13 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47ec7422] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3c5dbdf8]
2021-11-02 11:38:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:38:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:38:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:38:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:38:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:38:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:38:13 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:38:13 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:38:13 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f991c]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@999b951]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a1d526c]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb0a08c]
2021-11-02 11:38:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:38:13 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e190ed]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20ab76ee]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@485caa8f]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2703d91]
2021-11-02 11:38:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:38:13 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:38:13 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:38:13 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:38:13 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b83459e]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@414f87a9]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ddc6db2]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cd26422]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eda072]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:38:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:38:13 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa21d49]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e31d989]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b01a0d]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ed71727]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5261ec9]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:38:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:38:13 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:38:13 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:38:13 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78d9f51b]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ed382c]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@399ca607]
2021-11-02 11:38:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:38:13 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f59ea8c]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b2ccba5]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dc7cd1c]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50ab56e2]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:38:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:38:13 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d499c13]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ceca2ef]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a2ab862]
2021-11-02 11:38:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33188612]
2021-11-02 11:38:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:38:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:38:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:38:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:38:13 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:38:13 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:38:13 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:38:13 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:38:13 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:38:13 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:38:13 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:38:13 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:38:13 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3443e476
2021-11-02 11:38:13 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: b42a81d4-e61d-4178-9d00-3e48cf842afd (<unnamed>)
2021-11-02 11:38:13 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:38:13 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:38:13 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:38:13 DEBUG TransactionImpl:84 - begin
2021-11-02 11:38:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:38:13 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:38:13 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:38:13 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:38:13 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:40:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:40:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:40:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:40:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:40:58 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:40:58 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:40:58 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:40:58 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:40:58 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:40:58 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:40:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:40:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:40:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:40:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:40:58 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26a4842b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31e75d13
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@73ff4fae
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28d6290
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51850751
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6256ac4f
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed46ee
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a90fa8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac86ba5
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@9635fa
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@79e18e38
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1ca25c47
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33352f32
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27a5328c
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65e61854
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d5d9e5
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8792db
2021-11-02 11:40:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:40:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:40:58 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:40:58 DEBUG pooling:143 - No driver class specified
2021-11-02 11:40:58 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:40:58 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:40:58 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:40:58 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:40:58 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:40:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:40:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:40:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:40:59 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:40:59 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:40:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:40:59 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@616b241a
2021-11-02 11:40:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@616b241a
2021-11-02 11:40:59 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:40:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@776802b0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64c4c01]
2021-11-02 11:40:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:40:59 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:40:59 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:40:59 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:40:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:40:59 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:40:59 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:40:59 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:40:59 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:40:59 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:40:59 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:40:59 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:40:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:40:59 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:40:59 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:40:59 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:40:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:40:59 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:40:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:40:59 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:40:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:40:59 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:40:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:40:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:40:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:40:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:40:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:40:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:40:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:40:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:40:59 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:40:59 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:40:59 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:40:59 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:40:59 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:40:59 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:40:59 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:40:59 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:40:59 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:40:59 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:40:59 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:40:59 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:40:59 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:40:59 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:40:59 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:40:59 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:40:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:40:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:40:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:40:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:40:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:40:59 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:40:59 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:40:59 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:40:59 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:40:59 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:40:59 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:40:59 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:40:59 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:40:59 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:40:59 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:40:59 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:40:59 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:40:59 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:40:59 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:40:59 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:40:59 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:40:59 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:40:59 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:40:59 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:40:59 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:40:59 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:40:59 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:40:59 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:40:59 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:40:59 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:40:59 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:40:59 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:40:59 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:40:59 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:40:59 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:40:59 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:40:59 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:40:59 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:40:59 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:40:59 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:40:59 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:40:59 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:40:59 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:40:59 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:40:59 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:40:59 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:40:59 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, hibernate.hiberante.hbm2ddl.auto=create, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, user.script=, hiberante.hbm2ddl.auto=create, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@660f0c, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:40:59 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:40:59 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:40:59 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:40:59 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:40:59 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:40:59 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:40:59 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:40:59 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:40:59 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:40:59 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:40:59 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:40:59 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:40:59 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:40:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:40:59 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:40:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@776802b0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@480b57e2]
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:40:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:40:59 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664e848c]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c977dcf]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@392781e]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b18230]
2021-11-02 11:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:40:59 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@477021ee]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e9bbd9d]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b87074a]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3e3085]
2021-11-02 11:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:40:59 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:40:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:40:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:40:59 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c25cfe1]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a140ce5]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f71194d]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@db99785]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70716259]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:40:59 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:40:59 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:40:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:40:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e5c2463]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76437e9b]
2021-11-02 11:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:40:59 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3434a4f0]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79afa369]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f820f42]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b325930]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:40:59 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f3fc42f]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a1a012]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@443a53df]
2021-11-02 11:40:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c33da7a]
2021-11-02 11:40:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:40:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:40:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:40:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:40:59 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:40:59 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-11-02 11:40:59 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:40:59 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:40:59 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:40:59 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:40:59 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:40:59 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:40:59 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@110e9982
2021-11-02 11:40:59 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: dfeeb159-2959-4cf7-bd6c-a2dcc219f498 (<unnamed>)
2021-11-02 11:40:59 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:40:59 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:40:59 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:40:59 DEBUG TransactionImpl:84 - begin
2021-11-02 11:40:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:40:59 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:40:59 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: relation "users" does not exist
  Position: 13
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3079)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3673)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:332)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:196)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:127)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:713)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:705)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:700)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:48)
	at Driver.main(Driver.java:16)
2021-11-02 11:40:59 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42P01
2021-11-02 11:40:59 ERROR SqlExceptionHelper:142 - ERROR: relation "users" does not exist
  Position: 13
2021-11-02 11:42:05 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:42:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:42:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:42:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:42:05 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:42:05 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:42:05 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:42:05 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:42:05 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:42:05 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:42:05 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:42:05 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:42:05 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:42:05 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:42:05 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26a4842b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31e75d13
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@73ff4fae
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28d6290
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51850751
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6256ac4f
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed46ee
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a90fa8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac86ba5
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@9635fa
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@79e18e38
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1ca25c47
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33352f32
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27a5328c
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65e61854
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d5d9e5
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8792db
2021-11-02 11:42:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:42:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:42:05 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:42:05 DEBUG pooling:143 - No driver class specified
2021-11-02 11:42:05 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:42:05 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:42:05 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:42:05 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:42:05 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:42:06 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:42:06 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:42:06 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:42:06 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:42:06 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:42:06 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:42:06 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@616b241a
2021-11-02 11:42:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@616b241a
2021-11-02 11:42:06 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:42:06 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@776802b0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64c4c01]
2021-11-02 11:42:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:42:06 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:42:06 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:42:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:42:06 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:42:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:42:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:42:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:42:06 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:42:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:42:06 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:42:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:42:06 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:42:06 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:42:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:42:06 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:42:06 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:42:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:42:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:42:06 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:42:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:42:06 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:42:06 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:42:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:42:06 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:42:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:42:06 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:42:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:42:06 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:42:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:42:06 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:42:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:42:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:42:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:42:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:42:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:42:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:42:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:42:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:42:06 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:42:06 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:42:06 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:42:06 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:42:06 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:42:06 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:42:06 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:42:06 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:42:06 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:42:06 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:42:06 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:42:06 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:42:06 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:42:06 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:42:06 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:42:06 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:42:06 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:42:06 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:42:06 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:42:06 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:42:06 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:42:06 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:42:06 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:42:06 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:42:06 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:42:06 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:42:06 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:42:06 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:42:06 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:42:06 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:42:06 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:42:06 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:42:06 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:42:06 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:42:06 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:42:06 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:42:06 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:42:06 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:42:06 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:42:06 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:42:06 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:42:06 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:42:06 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:42:06 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:42:06 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:42:06 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:42:06 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:42:06 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:42:06 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:42:06 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:42:06 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:42:06 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:42:06 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:42:06 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:42:06 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:42:06 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:42:06 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:42:06 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:42:06 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:42:06 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:42:06 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:42:06 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:42:06 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@22587507, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:42:06 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:42:06 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:42:06 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:42:06 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:42:06 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:42:06 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:42:06 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:42:06 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:42:06 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:42:06 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:42:06 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:42:06 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:42:06 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:42:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:42:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:42:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:42:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:42:06 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:42:06 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:42:06 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@776802b0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@480b57e2]
2021-11-02 11:42:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:42:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:42:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:42:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:42:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:42:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:42:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:42:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:42:07 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664e848c]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c977dcf]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@392781e]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b18230]
2021-11-02 11:42:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:42:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:42:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:42:07 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@477021ee]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e9bbd9d]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b87074a]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d3e3085]
2021-11-02 11:42:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:42:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:42:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:42:07 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:42:07 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:42:07 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:42:07 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c25cfe1]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a140ce5]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f71194d]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@db99785]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70716259]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:42:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:42:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:42:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:42:07 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:42:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:42:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:42:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:42:07 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:42:07 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:42:07 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e5c2463]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76437e9b]
2021-11-02 11:42:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:42:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:42:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:42:07 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3434a4f0]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79afa369]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f820f42]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b325930]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:42:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:42:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:42:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:42:07 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f3fc42f]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a1a012]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@443a53df]
2021-11-02 11:42:07 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c33da7a]
2021-11-02 11:42:07 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:42:07 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:42:07 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:42:07 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:42:07 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKfygi9qo0vsw4vl32l4exjfyj9
2021-11-02 11:42:07 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@66d25ba9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:42:07 DEBUG SqlExceptionHelper:223 - SQL Warning
org.postgresql.util.PSQLWarning: relation "post_likes_junction" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2571)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2315)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:42:07 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-11-02 11:42:07 WARN  SqlExceptionHelper:231 - relation "post_likes_junction" does not exist, skipping
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKt9leoj5hdvxadhggexc0b28n4
2021-11-02 11:42:07 DEBUG SqlExceptionHelper:223 - SQL Warning
org.postgresql.util.PSQLWarning: relation "post_likes_junction" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2571)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2315)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:42:07 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-11-02 11:42:07 WARN  SqlExceptionHelper:231 - relation "post_likes_junction" does not exist, skipping
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    alter table if exists posts 
       drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-11-02 11:42:07 DEBUG SqlExceptionHelper:223 - SQL Warning
org.postgresql.util.PSQLWarning: relation "posts" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2571)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2315)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:42:07 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-11-02 11:42:07 WARN  SqlExceptionHelper:231 - relation "posts" does not exist, skipping
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    drop table if exists post_likes_junction cascade
2021-11-02 11:42:07 DEBUG SqlExceptionHelper:223 - SQL Warning
org.postgresql.util.PSQLWarning: table "post_likes_junction" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2571)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2315)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:42:07 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-11-02 11:42:07 WARN  SqlExceptionHelper:231 - table "post_likes_junction" does not exist, skipping
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    drop table if exists posts cascade
2021-11-02 11:42:07 DEBUG SqlExceptionHelper:223 - SQL Warning
org.postgresql.util.PSQLWarning: table "posts" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2571)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2315)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:42:07 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-11-02 11:42:07 WARN  SqlExceptionHelper:231 - table "posts" does not exist, skipping
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    drop table if exists users cascade
2021-11-02 11:42:07 DEBUG SqlExceptionHelper:223 - SQL Warning
org.postgresql.util.PSQLWarning: table "users" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2571)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2315)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:322)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:308)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:284)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:279)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:43)
	at Driver.main(Driver.java:16)
2021-11-02 11:42:07 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-11-02 11:42:07 WARN  SqlExceptionHelper:231 - table "users" does not exist, skipping
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    create table post_likes_junction (
       post_id int4 not null,
        user_id int4 not null,
        primary key (post_id, user_id)
    )
2021-11-02 11:42:07 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3dc68586] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    create table posts (
       post_id int4 generated by default as identity,
        content varchar(255),
        user_id int4,
        primary key (post_id)
    )
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    create table users (
       user_id int4 generated by default as identity,
        email varchar(255) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKfygi9qo0vsw4vl32l4exjfyj9 
       foreign key (user_id) 
       references users
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKt9leoj5hdvxadhggexc0b28n4 
       foreign key (post_id) 
       references posts
2021-11-02 11:42:07 DEBUG SQL:94 - 
    
    alter table if exists posts 
       add constraint FK5lidm6cqbc7u4xhqpxm898qme 
       foreign key (user_id) 
       references users
2021-11-02 11:42:07 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:42:07 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:42:07 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:42:07 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:42:07 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:42:07 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:42:07 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b2c4a8b
2021-11-02 11:42:07 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: d5c7c583-ba1f-4a2f-aaa3-a181d9563a63 (<unnamed>)
2021-11-02 11:42:07 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:42:07 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:42:07 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:42:07 DEBUG TransactionImpl:84 - begin
2021-11-02 11:42:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:42:07 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:42:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-11-02 11:42:07 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-11-02 11:42:07 DEBUG TransactionImpl:101 - committing
2021-11-02 11:42:07 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:42:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:42:07 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:42:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:42:07 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-11-02 11:42:07 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-11-02 11:42:07 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:42:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricks}
2021-11-02 11:42:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:42:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:42:07 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-11-02 11:42:07 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@27ec8754] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@480b57e2]
2021-11-02 11:42:07 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-11-02 11:42:07 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:42:07 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-11-02 11:45:12 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:45:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:45:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:45:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:45:13 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:45:13 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:45:13 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:45:13 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:45:13 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:45:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:45:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:45:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:45:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:45:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:45:13 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26a4842b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31e75d13
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@73ff4fae
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28d6290
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51850751
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6256ac4f
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed46ee
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a90fa8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac86ba5
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@9635fa
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@79e18e38
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1ca25c47
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33352f32
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27a5328c
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65e61854
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d5d9e5
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8792db
2021-11-02 11:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:45:13 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:45:13 DEBUG pooling:143 - No driver class specified
2021-11-02 11:45:13 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:45:13 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:45:13 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:45:13 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:45:13 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:45:13 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:45:13 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:45:13 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:45:13 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:45:13 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:45:14 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:45:14 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:45:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:45:14 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:45:14 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14f3c6fc]
2021-11-02 11:45:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:45:14 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:45:14 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:45:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:45:14 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:45:14 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:45:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:45:14 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:45:14 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:45:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:45:14 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:45:14 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:45:14 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:45:14 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:45:14 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:45:14 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:45:14 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:45:14 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:45:14 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:45:14 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:45:14 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:45:14 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:45:14 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:45:14 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:45:14 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:45:14 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:45:14 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:45:14 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:45:14 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:45:14 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:45:14 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:45:14 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:45:14 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:45:14 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:45:14 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:45:14 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:45:14 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:45:14 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:45:14 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:45:14 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:45:14 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:45:14 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:45:14 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:45:14 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:45:14 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:45:14 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:45:14 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:45:14 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:45:14 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:45:14 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:45:14 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:45:14 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:45:14 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:45:14 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:45:14 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:45:14 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:45:14 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:45:14 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:45:14 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:45:14 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:45:14 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:45:14 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:45:14 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:45:14 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:45:14 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:45:14 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:45:14 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:45:14 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:45:14 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:45:14 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:45:14 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:45:14 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:45:14 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:45:14 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:45:14 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@261ea657, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:45:14 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:45:14 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:45:14 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:45:14 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:45:14 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:45:14 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:45:14 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:45:14 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:45:14 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:45:14 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:45:14 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:45:14 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:45:14 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:45:14 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:45:14 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:45:14 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:45:14 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb41f5c]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@364fd4ae]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4f5506]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796d33eb]
2021-11-02 11:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:45:14 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285005b8]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27585351]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de6f1bc]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b35c7d]
2021-11-02 11:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:45:14 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:45:14 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:45:14 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:45:14 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:45:14 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88b76f2]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@498a612d]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1237ab]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dfdfe7d]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1578b8ec]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:45:14 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:45:14 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:45:14 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59303963]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e86192]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7abaf7]
2021-11-02 11:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:45:14 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@267f9765]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ba0a6f]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25a1a012]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce12fbb]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:45:14 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69aabcb0]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bf9ea6b]
2021-11-02 11:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b950f82]
2021-11-02 11:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:45:14 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:45:14 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKfygi9qo0vsw4vl32l4exjfyj9
2021-11-02 11:45:14 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14c99bf6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:45:14 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKt9leoj5hdvxadhggexc0b28n4
2021-11-02 11:45:14 DEBUG SQL:94 - 
    
    alter table if exists posts 
       drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-11-02 11:45:14 DEBUG SQL:94 - 
    
    drop table if exists post_likes_junction cascade
2021-11-02 11:45:14 DEBUG SQL:94 - 
    
    drop table if exists posts cascade
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    drop table if exists users cascade
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    create table post_likes_junction (
       post_id int4 not null,
        user_id int4 not null,
        primary key (post_id, user_id)
    )
2021-11-02 11:45:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@19ae2ee5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    create table posts (
       post_id int4 generated by default as identity,
        content varchar(255),
        user_id int4,
        primary key (post_id)
    )
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    create table users (
       user_id int4 generated by default as identity,
        email varchar(255) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKfygi9qo0vsw4vl32l4exjfyj9 
       foreign key (user_id) 
       references users
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKt9leoj5hdvxadhggexc0b28n4 
       foreign key (post_id) 
       references posts
2021-11-02 11:45:15 DEBUG SQL:94 - 
    
    alter table if exists posts 
       add constraint FK5lidm6cqbc7u4xhqpxm898qme 
       foreign key (user_id) 
       references users
2021-11-02 11:45:15 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:45:15 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:45:15 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:45:15 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:45:15 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:45:15 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:45:15 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b41e1bf
2021-11-02 11:45:15 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 13c2170b-fc46-49cd-95c1-1c2424ee26cb (<unnamed>)
2021-11-02 11:45:15 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:45:15 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:45:15 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:45:15 DEBUG TransactionImpl:84 - begin
2021-11-02 11:45:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:45:15 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:45:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-11-02 11:45:15 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-11-02 11:45:15 DEBUG TransactionImpl:101 - committing
2021-11-02 11:45:15 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:45:15 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:45:15 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:45:15 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:45:15 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-11-02 11:45:15 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-11-02 11:45:15 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:45:15 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricks}
2021-11-02 11:45:15 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:45:15 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:45:15 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-11-02 11:45:15 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1b8aaeab] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:45:15 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-11-02 11:45:15 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:45:15 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-11-02 11:46:07 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:46:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:46:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:46:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:46:08 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:46:08 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:46:08 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:46:08 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:46:08 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:46:08 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:46:08 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:46:08 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:46:08 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:46:08 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:46:08 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26a4842b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31e75d13
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@73ff4fae
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28d6290
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51850751
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6256ac4f
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed46ee
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a90fa8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac86ba5
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@9635fa
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@79e18e38
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1ca25c47
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33352f32
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27a5328c
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65e61854
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d5d9e5
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8792db
2021-11-02 11:46:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:46:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:46:08 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:46:08 DEBUG pooling:143 - No driver class specified
2021-11-02 11:46:08 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:46:08 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:46:08 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:46:08 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:46:08 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:46:09 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:46:09 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:46:09 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:46:09 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:46:09 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:46:09 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:46:09 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:46:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:46:09 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:46:09 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14f3c6fc]
2021-11-02 11:46:09 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:46:09 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:46:09 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:46:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:46:09 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:46:09 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:46:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:46:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:46:09 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:46:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:46:09 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:46:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:46:09 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:46:09 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:46:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:46:09 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:46:09 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:46:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:46:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:46:09 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:46:09 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:46:09 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:46:09 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:46:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:46:09 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:46:09 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:46:09 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:46:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:46:09 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:46:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:09 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:46:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:46:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:46:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:46:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:46:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:46:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:46:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:46:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:46:09 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:46:09 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:46:09 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:46:09 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:46:09 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:46:09 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:46:09 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:46:09 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:46:09 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:46:09 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:46:09 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:46:09 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:46:09 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:46:09 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:46:09 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:46:09 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:46:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:46:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:46:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:46:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:46:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:46:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:46:09 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:46:09 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:46:09 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:46:09 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:46:09 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:46:09 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:46:09 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:46:09 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:46:09 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:46:09 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:46:09 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:46:09 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:46:09 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:46:09 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:46:09 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:46:09 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:46:09 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:46:09 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:46:09 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:46:09 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:46:09 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:46:09 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:46:09 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:46:09 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:46:09 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:46:09 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:46:09 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:46:09 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:46:09 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:46:09 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:46:09 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:46:09 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:46:09 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:46:09 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:46:09 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:46:09 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:46:09 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:46:09 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:46:09 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:46:09 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:46:09 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@261ea657, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:46:09 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:46:09 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:46:09 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:46:09 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:46:09 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:46:09 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:46:09 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:46:09 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:46:09 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:46:09 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:46:09 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:46:09 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:46:09 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:46:09 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:46:09 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:46:09 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:46:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:46:09 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb41f5c]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@364fd4ae]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4f5506]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796d33eb]
2021-11-02 11:46:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:46:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285005b8]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27585351]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de6f1bc]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b35c7d]
2021-11-02 11:46:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:46:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:46:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:46:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:46:09 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:46:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:46:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88b76f2]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@498a612d]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1237ab]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dfdfe7d]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1578b8ec]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:46:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:46:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:46:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:46:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59303963]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e86192]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7abaf7]
2021-11-02 11:46:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:46:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@267f9765]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ba0a6f]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25a1a012]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce12fbb]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:46:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:46:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69aabcb0]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bf9ea6b]
2021-11-02 11:46:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b950f82]
2021-11-02 11:46:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:46:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:46:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:46:09 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKfygi9qo0vsw4vl32l4exjfyj9
2021-11-02 11:46:09 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14c99bf6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:46:09 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKt9leoj5hdvxadhggexc0b28n4
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    alter table if exists posts 
       drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    drop table if exists post_likes_junction cascade
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    drop table if exists posts cascade
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    drop table if exists users cascade
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    create table post_likes_junction (
       post_id int4 not null,
        user_id int4 not null,
        primary key (post_id, user_id)
    )
2021-11-02 11:46:10 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@19ae2ee5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    create table posts (
       post_id int4 generated by default as identity,
        content varchar(255),
        user_id int4,
        primary key (post_id)
    )
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    create table users (
       user_id int4 generated by default as identity,
        email varchar(255) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKfygi9qo0vsw4vl32l4exjfyj9 
       foreign key (user_id) 
       references users
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKt9leoj5hdvxadhggexc0b28n4 
       foreign key (post_id) 
       references posts
2021-11-02 11:46:10 DEBUG SQL:94 - 
    
    alter table if exists posts 
       add constraint FK5lidm6cqbc7u4xhqpxm898qme 
       foreign key (user_id) 
       references users
2021-11-02 11:46:10 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:46:10 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:46:10 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:46:10 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:46:10 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:46:10 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:46:10 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b41e1bf
2021-11-02 11:46:10 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: eb1a3097-5fa6-4777-9959-357fb29c5cd2 (<unnamed>)
2021-11-02 11:46:10 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:46:10 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:46:10 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:46:10 DEBUG TransactionImpl:84 - begin
2021-11-02 11:46:10 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:46:10 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:46:10 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-11-02 11:46:10 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-11-02 11:46:10 DEBUG TransactionImpl:101 - committing
2021-11-02 11:46:10 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:46:10 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:46:10 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:46:10 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:46:10 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-11-02 11:46:10 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-11-02 11:46:10 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:46:10 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricks}
2021-11-02 11:46:10 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:46:10 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:46:10 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18ffca6c
2021-11-02 11:46:10 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username:=username
2021-11-02 11:46:10 ERROR ErrorTracker:62 - line 1:36: unexpected token: username
2021-11-02 11:46:10 ERROR ErrorTracker:57 - line 1:36: unexpected token: username
line 1:36: unexpected token: username
	at org.hibernate.hql.internal.antlr.HqlBaseParser.primaryExpression(HqlBaseParser.java:1016)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.atom(HqlBaseParser.java:3549)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.unaryExpression(HqlBaseParser.java:3401)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.multiplyExpression(HqlBaseParser.java:3273)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.additiveExpression(HqlBaseParser.java:2930)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.concatenation(HqlBaseParser.java:615)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.relationalExpression(HqlBaseParser.java:2697)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.equalityExpression(HqlBaseParser.java:2558)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.negatedExpression(HqlBaseParser.java:2522)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.logicalAndExpression(HqlBaseParser.java:2438)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.logicalOrExpression(HqlBaseParser.java:2403)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.expression(HqlBaseParser.java:2116)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.logicalExpression(HqlBaseParser.java:1894)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.whereClause(HqlBaseParser.java:498)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule(HqlBaseParser.java:754)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement(HqlBaseParser.java:319)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:198)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:290)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:189)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:118)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:78)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:158)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:611)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:720)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:745)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:104)
	at com.example.dao.UserDaoHibernate.getUserByUsername(UserDaoHibernate.java:35)
	at Driver.main(Driver.java:18)
2021-11-02 11:46:41 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:46:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:46:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:46:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:46:41 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:46:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:46:41 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:46:41 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:46:41 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:46:41 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:46:41 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:46:41 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:46:41 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:46:41 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:46:41 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26a4842b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31e75d13
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@73ff4fae
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28d6290
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51850751
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6256ac4f
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed46ee
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a90fa8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac86ba5
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@9635fa
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@79e18e38
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1ca25c47
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33352f32
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27a5328c
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65e61854
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d5d9e5
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8792db
2021-11-02 11:46:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:46:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:46:41 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:46:41 DEBUG pooling:143 - No driver class specified
2021-11-02 11:46:41 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:46:41 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:46:41 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:46:41 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:46:41 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:46:42 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:46:42 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:46:42 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:46:42 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:46:42 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:46:42 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:46:42 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:46:42 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:46:42 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:46:42 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14f3c6fc]
2021-11-02 11:46:42 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:46:42 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:46:42 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:46:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:46:42 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:46:42 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:46:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:46:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:46:42 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:46:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:46:42 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:46:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:46:42 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:46:42 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:46:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:46:42 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:46:42 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:46:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:46:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:46:42 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:46:42 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:46:42 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:46:42 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:46:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:46:42 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:46:42 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:46:42 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:46:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:46:42 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:46:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:46:42 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:46:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:46:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:46:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:46:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:46:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:46:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:46:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:46:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:46:42 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:46:42 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:46:42 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:46:42 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:46:42 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:46:42 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:46:42 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:46:42 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:46:42 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:46:42 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:46:42 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:46:42 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:46:42 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:46:42 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:46:42 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:46:42 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:46:42 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:46:42 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:46:42 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:46:42 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:46:42 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:46:42 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:46:42 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:46:42 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:46:42 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:46:42 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:46:42 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:46:42 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:46:42 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:46:42 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:46:42 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:46:42 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:46:42 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:46:42 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:46:42 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:46:42 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:46:42 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:46:42 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:46:42 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:46:42 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:46:42 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:46:42 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:46:42 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:46:42 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:46:42 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:46:42 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:46:42 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:46:42 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:46:42 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:46:42 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:46:42 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:46:42 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:46:42 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:46:42 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:46:42 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:46:42 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:46:42 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:46:42 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:46:42 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:46:42 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:46:42 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:46:42 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:46:42 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4a734c04, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:46:42 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:46:42 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:46:42 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:46:42 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:46:42 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:46:42 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:46:42 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:46:42 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:46:42 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:46:42 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:46:42 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:46:42 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:46:42 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:46:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:46:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:46:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:46:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:46:42 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:46:42 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:46:42 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:46:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:46:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:46:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:46:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:46:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:46:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:46:43 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:46:43 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:46:43 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb41f5c]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@364fd4ae]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4f5506]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796d33eb]
2021-11-02 11:46:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:46:43 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285005b8]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27585351]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de6f1bc]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b35c7d]
2021-11-02 11:46:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:46:43 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:46:43 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:46:43 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:46:43 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:46:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:46:43 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88b76f2]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@498a612d]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1237ab]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dfdfe7d]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1578b8ec]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:46:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:46:43 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:46:43 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:46:43 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59303963]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e86192]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7abaf7]
2021-11-02 11:46:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:46:43 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@267f9765]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ba0a6f]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25a1a012]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce12fbb]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:46:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:46:43 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69aabcb0]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bf9ea6b]
2021-11-02 11:46:43 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b950f82]
2021-11-02 11:46:43 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:46:43 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:46:43 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:46:43 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:46:43 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKfygi9qo0vsw4vl32l4exjfyj9
2021-11-02 11:46:43 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14c99bf6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKt9leoj5hdvxadhggexc0b28n4
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    alter table if exists posts 
       drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    drop table if exists post_likes_junction cascade
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    drop table if exists posts cascade
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    drop table if exists users cascade
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    create table post_likes_junction (
       post_id int4 not null,
        user_id int4 not null,
        primary key (post_id, user_id)
    )
2021-11-02 11:46:43 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@19ae2ee5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    create table posts (
       post_id int4 generated by default as identity,
        content varchar(255),
        user_id int4,
        primary key (post_id)
    )
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    create table users (
       user_id int4 generated by default as identity,
        email varchar(255) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKfygi9qo0vsw4vl32l4exjfyj9 
       foreign key (user_id) 
       references users
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKt9leoj5hdvxadhggexc0b28n4 
       foreign key (post_id) 
       references posts
2021-11-02 11:46:43 DEBUG SQL:94 - 
    
    alter table if exists posts 
       add constraint FK5lidm6cqbc7u4xhqpxm898qme 
       foreign key (user_id) 
       references users
2021-11-02 11:46:43 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:46:43 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:46:43 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:46:43 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:46:43 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:46:43 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:46:43 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b41e1bf
2021-11-02 11:46:43 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: ddec1435-a156-4795-bcbe-0b3510ad7b1d (<unnamed>)
2021-11-02 11:46:43 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:46:43 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:46:43 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:46:43 DEBUG TransactionImpl:84 - begin
2021-11-02 11:46:43 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:46:43 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:46:43 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-11-02 11:46:43 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-11-02 11:46:43 DEBUG TransactionImpl:101 - committing
2021-11-02 11:46:43 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:46:43 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:46:43 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:46:43 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:46:43 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-11-02 11:46:43 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-11-02 11:46:43 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:46:43 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricks}
2021-11-02 11:46:43 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:46:43 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:46:43 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18ffca6c
2021-11-02 11:46:43 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=:username
2021-11-02 11:46:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:46:43 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-11-02 11:46:43 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-11-02 11:46:43 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-11-02 11:46:43 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-11-02 11:46:43 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:46:43 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-11-02 11:46:43 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-11-02 11:46:43 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
2021-11-02 11:46:43 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-11-02 11:46:43 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-11-02 11:46:43 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-11-02 11:46:43 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@50eca7c6}

2021-11-02 11:46:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:46:43 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=:username
2021-11-02 11:46:43 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=?
2021-11-02 11:46:43 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:46:43 DEBUG SQL:94 - 
    select
        user0_.user_id as user_id1_2_,
        user0_.email as email2_2_,
        user0_.first_name as first_na3_2_,
        user0_.last_name as last_nam4_2_,
        user0_.password as password5_2_,
        user0_.username as username6_2_ 
    from
        users user0_ 
    where
        user0_.username=?
2021-11-02 11:46:43 DEBUG Loader:384 - Result set row: 0
2021-11-02 11:46:43 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-11-02 11:46:43 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:46:43 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-11-02 11:46:43 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1537e43] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:46:43 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-11-02 11:46:43 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:46:43 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-11-02 11:49:10 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:49:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:49:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:49:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:49:10 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:49:10 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:49:10 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:49:10 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:49:10 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:49:11 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:49:11 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:49:11 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:49:11 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:49:11 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:49:11 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26a4842b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31e75d13
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@73ff4fae
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28d6290
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51850751
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6256ac4f
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed46ee
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a90fa8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac86ba5
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@9635fa
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@79e18e38
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1ca25c47
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33352f32
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27a5328c
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65e61854
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d5d9e5
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8792db
2021-11-02 11:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:49:11 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:49:11 DEBUG pooling:143 - No driver class specified
2021-11-02 11:49:11 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:49:11 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:49:11 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:49:11 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:49:11 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:49:11 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:49:11 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:49:11 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:49:11 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:49:11 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:49:12 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:49:12 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:49:12 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:49:12 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:49:12 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14f3c6fc]
2021-11-02 11:49:12 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:49:12 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:49:12 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:49:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:49:12 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:49:12 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:49:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:49:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:49:12 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:49:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:49:12 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:49:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:49:12 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:49:12 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:49:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:49:12 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:49:12 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:49:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:49:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:49:12 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:49:12 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:49:12 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:49:12 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:49:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:49:12 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:49:12 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:49:12 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:49:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:49:12 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:49:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:49:12 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:49:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:49:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:49:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:49:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:49:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:49:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:49:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:49:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:49:12 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:49:12 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:49:12 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:49:12 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:49:12 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:49:12 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:49:12 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:49:12 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:49:12 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:49:12 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:49:12 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:49:12 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:49:12 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:49:12 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:49:12 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:49:12 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:49:12 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:49:12 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:49:12 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:49:12 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:49:12 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:49:12 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:49:12 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:49:12 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:49:12 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:49:12 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:49:12 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:49:12 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:49:12 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:49:12 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:49:12 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:49:12 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:49:12 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:49:12 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:49:12 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:49:12 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:49:12 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:49:12 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:49:12 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:49:12 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:49:12 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:49:12 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:49:12 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:49:12 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:49:12 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:49:12 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:49:12 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:49:12 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:49:12 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:49:12 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:49:12 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:49:12 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:49:12 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:49:12 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:49:12 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:49:12 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:49:12 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:49:12 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:49:12 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:49:12 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:49:12 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:49:12 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:49:12 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@261ea657, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:49:12 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:49:12 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:49:12 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:49:12 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:49:12 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:49:12 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:49:12 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:49:12 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:49:12 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:49:12 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:49:12 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:49:12 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:49:12 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:49:12 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:49:12 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:49:12 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:49:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:49:12 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb41f5c]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@364fd4ae]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4f5506]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796d33eb]
2021-11-02 11:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:49:12 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285005b8]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27585351]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de6f1bc]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b35c7d]
2021-11-02 11:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:49:12 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:49:12 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:49:12 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:49:12 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:49:12 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88b76f2]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@498a612d]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1237ab]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dfdfe7d]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1578b8ec]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:49:12 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:49:12 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:49:12 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59303963]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e86192]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7abaf7]
2021-11-02 11:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:49:12 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@267f9765]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ba0a6f]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25a1a012]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce12fbb]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:49:12 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69aabcb0]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bf9ea6b]
2021-11-02 11:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b950f82]
2021-11-02 11:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:49:12 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKfygi9qo0vsw4vl32l4exjfyj9
2021-11-02 11:49:12 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14c99bf6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKt9leoj5hdvxadhggexc0b28n4
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    alter table if exists posts 
       drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    drop table if exists post_likes_junction cascade
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    drop table if exists posts cascade
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    drop table if exists users cascade
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    create table post_likes_junction (
       post_id int4 not null,
        user_id int4 not null,
        primary key (post_id, user_id)
    )
2021-11-02 11:49:12 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@19ae2ee5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    create table posts (
       post_id int4 generated by default as identity,
        content varchar(255),
        user_id int4,
        primary key (post_id)
    )
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    create table users (
       user_id int4 generated by default as identity,
        email varchar(255) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-11-02 11:49:12 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKfygi9qo0vsw4vl32l4exjfyj9 
       foreign key (user_id) 
       references users
2021-11-02 11:49:13 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKt9leoj5hdvxadhggexc0b28n4 
       foreign key (post_id) 
       references posts
2021-11-02 11:49:13 DEBUG SQL:94 - 
    
    alter table if exists posts 
       add constraint FK5lidm6cqbc7u4xhqpxm898qme 
       foreign key (user_id) 
       references users
2021-11-02 11:49:13 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:49:13 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:49:13 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:49:13 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:49:13 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:49:13 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:49:13 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b41e1bf
2021-11-02 11:49:13 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: ed932fbd-2961-4b6b-8523-9bea3cb229c6 (<unnamed>)
2021-11-02 11:49:13 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:49:13 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:49:13 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:49:13 DEBUG TransactionImpl:84 - begin
2021-11-02 11:49:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:49:13 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:49:13 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-11-02 11:49:13 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-11-02 11:49:13 DEBUG TransactionImpl:101 - committing
2021-11-02 11:49:13 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:49:13 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:49:13 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:49:13 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:49:13 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-11-02 11:49:13 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-11-02 11:49:13 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:49:13 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricks}
2021-11-02 11:49:13 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:49:13 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:49:13 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@18ffca6c
2021-11-02 11:49:13 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=:username
2021-11-02 11:49:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:49:13 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-11-02 11:49:13 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-11-02 11:49:13 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-11-02 11:49:13 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-11-02 11:49:13 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:49:13 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-11-02 11:49:13 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-11-02 11:49:13 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
2021-11-02 11:49:13 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-11-02 11:49:13 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-11-02 11:49:13 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-11-02 11:49:13 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@50eca7c6}

2021-11-02 11:49:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:49:13 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=:username
2021-11-02 11:49:13 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=?
2021-11-02 11:49:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:49:13 DEBUG SQL:94 - 
    select
        user0_.user_id as user_id1_2_,
        user0_.email as email2_2_,
        user0_.first_name as first_na3_2_,
        user0_.last_name as last_nam4_2_,
        user0_.password as password5_2_,
        user0_.username as username6_2_ 
    from
        users user0_ 
    where
        user0_.username=?
2021-11-02 11:49:13 DEBUG Loader:384 - Result set row: 0
2021-11-02 11:49:13 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-11-02 11:49:13 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:49:13 DEBUG TransactionImpl:84 - begin
2021-11-02 11:49:13 DEBUG TransactionImpl:101 - committing
2021-11-02 11:49:13 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:49:13 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:49:13 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [com.example.models.User.likePosts#1] (initialized)
2021-11-02 11:49:13 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-11-02 11:49:13 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-11-02 11:49:13 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-11-02 11:49:13 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:49:13 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricksanchez}
2021-11-02 11:49:13 DEBUG SQL:94 - 
    update
        users 
    set
        email=?,
        first_name=?,
        last_name=?,
        password=?,
        username=? 
    where
        user_id=?
2021-11-02 11:49:13 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:49:13 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:49:13 DEBUG SQL:94 - 
    select
        user0_.user_id as user_id1_2_,
        user0_.email as email2_2_,
        user0_.first_name as first_na3_2_,
        user0_.last_name as last_nam4_2_,
        user0_.password as password5_2_,
        user0_.username as username6_2_ 
    from
        users user0_ 
    where
        user0_.username=?
2021-11-02 11:49:13 DEBUG Loader:384 - Result set row: 0
2021-11-02 11:49:13 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-11-02 11:49:13 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:49:13 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-11-02 11:49:13 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1860a7a1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:49:13 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-11-02 11:49:13 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:49:13 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-11-02 11:51:06 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-11-02 11:51:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-11-02 11:51:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-11-02 11:51:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-11-02 11:51:06 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-11-02 11:51:06 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-11-02 11:51:06 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-11-02 11:51:06 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-11-02 11:51:06 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-11-02 11:51:06 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-11-02 11:51:06 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-11-02 11:51:06 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-11-02 11:51:06 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-11-02 11:51:06 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-11-02 11:51:06 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6cbcf243
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26a4842b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31e75d13
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@73ff4fae
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3f446bef
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c80e49b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@56f6d40b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3060d8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e54db99
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@426b6a74
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665e9289
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165b2f7f
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@292d1c71
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28d6290
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51850751
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4275c20c
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7adf16aa
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5be067de
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6722db6e
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d0b5baf
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@186978a6
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5bf22f18
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@741b3bc3
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32f0fba8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c351808
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68759011
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25ddbbbb
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6256ac4f
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@649725e3
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4eed46ee
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@77192705
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbe30be
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7fd4acee
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@76c7beb3
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a90fa8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@4f936da8
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ffab045
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5ac86ba5
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@9635fa
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@71e5f61d
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a62689d
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@79e18e38
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1ca25c47
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f2606b
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33352f32
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1255b1d1
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a0fd6c
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@27a5328c
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65e61854
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d5d9e5
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a1d204a
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c6357f9
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@591e58fa
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3954d008
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f94c4db
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@593e824f
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72ccd81a
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d8792db
2021-11-02 11:51:06 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-11-02 11:51:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-11-02 11:51:06 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-11-02 11:51:06 DEBUG pooling:143 - No driver class specified
2021-11-02 11:51:06 INFO  pooling:115 - HHH10001005: using driver [null] at URL [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:51:06 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, driver.class=org.postgresql.Driver, user=socialuser}
2021-11-02 11:51:06 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-11-02 11:51:06 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-11-02 11:51:06 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-11-02 11:51:07 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.7
      major : 12
      minor : 7
2021-11-02 11:51:07 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-11-02 11:51:07 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-11-02 11:51:07 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-11-02 11:51:07 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-11-02 11:51:07 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-11-02 11:51:07 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:51:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@62b969c4
2021-11-02 11:51:07 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@5f2f577
2021-11-02 11:51:07 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14f3c6fc]
2021-11-02 11:51:07 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:51:07 DEBUG EntityBinder:430 - Import with entity name User
2021-11-02 11:51:07 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-11-02 11:51:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-11-02 11:51:07 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property id
2021-11-02 11:51:07 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, identity, , ...)
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-11-02 11:51:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-11-02 11:51:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-11-02 11:51:07 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property email
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-11-02 11:51:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-11-02 11:51:07 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property firstName
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-11-02 11:51:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-11-02 11:51:07 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property lastName
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-11-02 11:51:07 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property likePosts
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-11-02 11:51:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-11-02 11:51:07 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property password
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-11-02 11:51:07 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property posts
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-11-02 11:51:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-11-02 11:51:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-11-02 11:51:07 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property username
2021-11-02 11:51:07 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-11-02 11:51:07 DEBUG EntityBinder:430 - Import with entity name Post
2021-11-02 11:51:07 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-11-02 11:51:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-11-02 11:51:07 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property postId
2021-11-02 11:51:07 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:51:07 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property likes
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-11-02 11:51:07 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-11-02 11:51:07 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property postContent
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-11-02 11:51:07 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-11-02 11:51:07 DEBUG PropertyBinder:266 - Building property user
2021-11-02 11:51:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-11-02 11:51:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-11-02 11:51:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-11-02 11:51:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-11-02 11:51:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-11-02 11:51:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-11-02 11:51:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-11-02 11:51:07 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-11-02 11:51:07 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-11-02 11:51:07 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-11-02 11:51:07 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-11-02 11:51:07 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-11-02 11:51:07 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:51:07 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-11-02 11:51:07 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-11-02 11:51:07 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-11-02 11:51:07 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-11-02 11:51:07 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-11-02 11:51:07 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-11-02 11:51:07 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-11-02 11:51:07 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-11-02 11:51:07 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-11-02 11:51:07 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-11-02 11:51:07 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-11-02 11:51:07 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:51:07 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:51:07 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:51:07 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:51:07 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-11-02 11:51:07 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-11-02 11:51:07 DEBUG SessionFactoryImpl:196 - Building session factory
2021-11-02 11:51:07 DEBUG Settings:70 - SessionFactory name : null
2021-11-02 11:51:07 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-11-02 11:51:07 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-11-02 11:51:07 DEBUG Settings:74 - Statistics: disabled
2021-11-02 11:51:07 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-11-02 11:51:07 DEBUG Settings:77 - Default entity-mode: pojo
2021-11-02 11:51:07 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-11-02 11:51:07 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-11-02 11:51:07 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-11-02 11:51:07 DEBUG Settings:82 - Default batch fetch size: -1
2021-11-02 11:51:07 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-11-02 11:51:07 DEBUG Settings:84 - Default null ordering: NONE
2021-11-02 11:51:07 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-11-02 11:51:07 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-11-02 11:51:07 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-11-02 11:51:07 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-11-02 11:51:07 DEBUG Settings:92 - Query language substitutions: {}
2021-11-02 11:51:07 DEBUG Settings:93 - Named query checking : enabled
2021-11-02 11:51:07 DEBUG Settings:95 - Second-level cache: disabled
2021-11-02 11:51:07 DEBUG Settings:96 - Second-level query cache: disabled
2021-11-02 11:51:07 DEBUG Settings:97 - Second-level query cache factory: null
2021-11-02 11:51:07 DEBUG Settings:98 - Second-level cache region prefix: null
2021-11-02 11:51:07 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-11-02 11:51:07 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-11-02 11:51:07 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-11-02 11:51:07 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-11-02 11:51:07 DEBUG Settings:104 - JDBC batch size: 15
2021-11-02 11:51:07 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-11-02 11:51:07 DEBUG Settings:106 - Scrollable result sets: enabled
2021-11-02 11:51:07 DEBUG Settings:107 - Wrap result sets: disabled
2021-11-02 11:51:07 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-11-02 11:51:07 DEBUG Settings:109 - JDBC result set fetch size: null
2021-11-02 11:51:07 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-11-02 11:51:07 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-11-02 11:51:07 DEBUG Settings:113 - JPA compliance - query : 
2021-11-02 11:51:07 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-11-02 11:51:07 DEBUG Settings:115 - JPA compliance - lists : 
2021-11-02 11:51:07 DEBUG Settings:116 - JPA compliance - transactions : 
2021-11-02 11:51:07 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-11-02 11:51:07 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=E:\Documents\EthansNotesAndExamples\SocialHubHibernate\target\classes;C:\Program Files\apache-tomcat-9.0.52\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.52\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.52\lib\ecj-4.20.jar;C:\Program Files\apache-tomcat-9.0.52\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.52\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.52\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin, sun.java.command=Driver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=16.0.1, user.dir=E:\Documents\EthansNotesAndExamples\SocialHubHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@261ea657, hibernate.connection.driver.class=org.postgresql.Driver, java.library.path=C:\Program Files\sts-4.11.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin/server;C:/Program Files/sts-4.11.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_16.0.1.v20210528-1205/jre/bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\nodejs\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Program Files\sts-4.11.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=60.0}
2021-11-02 11:51:07 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-11-02 11:51:07 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-11-02 11:51:07 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-11-02 11:51:07 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-11-02 11:51:07 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-11-02 11:51:07 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-11-02 11:51:07 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-11-02 11:51:07 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-11-02 11:51:07 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-11-02 11:51:07 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-11-02 11:51:07 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-11-02 11:51:07 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-11-02 11:51:07 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-11-02 11:51:07 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:51:07 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:51:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-11-02 11:51:08 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-11-02 11:51:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cdf39b2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-11-02 11:51:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-11-02 11:51:08 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into posts (content, user_id) values (?, ?)
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb41f5c]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@364fd4ae]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4f5506]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796d33eb]
2021-11-02 11:51:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:51:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:51:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:51:08 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285005b8]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27585351]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de6f1bc]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b35c7d]
2021-11-02 11:51:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:51:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:51:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-11-02 11:51:08 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-11-02 11:51:08 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:51:08 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-11-02 11:51:08 DEBUG AbstractEntityPersister:3807 -  Identity insert: insert into users (email, first_name, last_name, password, username) values (?, ?, ?, ?, ?)
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a083b96]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c604965]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f8951a]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c17c0f8]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@260e3837]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:51:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:51:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:51:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:51:08 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88b76f2]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@498a612d]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1237ab]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dfdfe7d]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1578b8ec]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:51:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:51:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:51:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-11-02 11:51:08 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-11-02 11:51:08 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:51:08 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59303963]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e86192]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7abaf7]
2021-11-02 11:51:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:51:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:51:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:51:08 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@267f9765]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ba0a6f]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25a1a012]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce12fbb]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-11-02 11:51:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:51:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:51:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-11-02 11:51:08 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69aabcb0]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bf9ea6b]
2021-11-02 11:51:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b950f82]
2021-11-02 11:51:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-11-02 11:51:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-11-02 11:51:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-11-02 11:51:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-11-02 11:51:08 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKfygi9qo0vsw4vl32l4exjfyj9
2021-11-02 11:51:08 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14c99bf6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       drop constraint if exists FKt9leoj5hdvxadhggexc0b28n4
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    alter table if exists posts 
       drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    drop table if exists post_likes_junction cascade
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    drop table if exists posts cascade
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    drop table if exists users cascade
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    create table post_likes_junction (
       post_id int4 not null,
        user_id int4 not null,
        primary key (post_id, user_id)
    )
2021-11-02 11:51:08 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@19ae2ee5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    create table posts (
       post_id int4 generated by default as identity,
        content varchar(255),
        user_id int4,
        primary key (post_id)
    )
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    create table users (
       user_id int4 generated by default as identity,
        email varchar(255) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKfygi9qo0vsw4vl32l4exjfyj9 
       foreign key (user_id) 
       references users
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    alter table if exists post_likes_junction 
       add constraint FKt9leoj5hdvxadhggexc0b28n4 
       foreign key (post_id) 
       references posts
2021-11-02 11:51:08 DEBUG SQL:94 - 
    
    alter table if exists posts 
       add constraint FK5lidm6cqbc7u4xhqpxm898qme 
       foreign key (user_id) 
       references users
2021-11-02 11:51:08 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-11-02 11:51:08 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-11-02 11:51:08 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:51:08 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-11-02 11:51:08 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-11-02 11:51:08 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-11-02 11:51:08 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b41e1bf
2021-11-02 11:51:08 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 7247149f-209c-4dbd-bde3-e13335048470 (<unnamed>)
2021-11-02 11:51:08 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-11-02 11:51:08 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-11-02 11:51:08 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-11-02 11:51:08 DEBUG TransactionImpl:84 - begin
2021-11-02 11:51:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:51:08 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:51:08 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2021-11-02 11:51:08 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-11-02 11:51:08 DEBUG TransactionImpl:101 - committing
2021-11-02 11:51:08 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:51:08 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:51:08 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:51:08 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-11-02 11:51:08 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-11-02 11:51:08 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-11-02 11:51:08 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:51:08 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricks}
2021-11-02 11:51:08 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:08 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:08 DEBUG TransactionImpl:84 - begin
2021-11-02 11:51:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-11-02 11:51:08 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username) 
    values
        (?, ?, ?, ?, ?)
2021-11-02 11:51:08 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2021-11-02 11:51:08 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-11-02 11:51:08 DEBUG TransactionImpl:101 - committing
2021-11-02 11:51:08 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:51:08 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:51:08 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [com.example.models.User.likePosts#1] (initialized)
2021-11-02 11:51:08 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-11-02 11:51:08 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#2], was: [<unreferenced>] (initialized)
2021-11-02 11:51:08 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [<unreferenced>] (initialized)
2021-11-02 11:51:08 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-11-02 11:51:08 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 4 collections
2021-11-02 11:51:08 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:51:08 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricks}
2021-11-02 11:51:08 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, likePosts=[], id=2, posts=[], email=msmith@mail.com, username=morty}
2021-11-02 11:51:08 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:08 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:08 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@511da44f
2021-11-02 11:51:08 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=:username
2021-11-02 11:51:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:51:08 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-11-02 11:51:08 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-11-02 11:51:08 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-11-02 11:51:08 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-11-02 11:51:08 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@50eca7c6
2021-11-02 11:51:08 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-11-02 11:51:08 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-11-02 11:51:08 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
2021-11-02 11:51:08 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-11-02 11:51:08 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-11-02 11:51:08 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-11-02 11:51:08 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@50eca7c6}

2021-11-02 11:51:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:51:08 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=:username
2021-11-02 11:51:08 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=?
2021-11-02 11:51:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-11-02 11:51:08 DEBUG SQL:94 - 
    select
        user0_.user_id as user_id1_2_,
        user0_.email as email2_2_,
        user0_.first_name as first_na3_2_,
        user0_.last_name as last_nam4_2_,
        user0_.password as password5_2_,
        user0_.username as username6_2_ 
    from
        users user0_ 
    where
        user0_.username=?
2021-11-02 11:51:09 DEBUG Loader:384 - Result set row: 0
2021-11-02 11:51:09 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-11-02 11:51:09 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:09 DEBUG TransactionImpl:84 - begin
2021-11-02 11:51:09 DEBUG TransactionImpl:101 - committing
2021-11-02 11:51:09 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:51:09 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:51:09 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#1], was: [com.example.models.User.likePosts#1] (initialized)
2021-11-02 11:51:09 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-11-02 11:51:09 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#2], was: [com.example.models.User.likePosts#2] (initialized)
2021-11-02 11:51:09 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-11-02 11:51:09 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2021-11-02 11:51:09 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2021-11-02 11:51:09 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:51:09 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricksanchez}
2021-11-02 11:51:09 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, likePosts=[], id=2, posts=[], email=msmith@mail.com, username=morty}
2021-11-02 11:51:09 DEBUG SQL:94 - 
    update
        users 
    set
        email=?,
        first_name=?,
        last_name=?,
        password=?,
        username=? 
    where
        user_id=?
2021-11-02 11:51:09 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:09 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:09 DEBUG SQL:94 - 
    select
        user0_.user_id as user_id1_2_,
        user0_.email as email2_2_,
        user0_.first_name as first_na3_2_,
        user0_.last_name as last_nam4_2_,
        user0_.password as password5_2_,
        user0_.username as username6_2_ 
    from
        users user0_ 
    where
        user0_.username=?
2021-11-02 11:51:09 DEBUG Loader:384 - Result set row: 0
2021-11-02 11:51:09 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-11-02 11:51:09 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:09 DEBUG TransactionImpl:84 - begin
2021-11-02 11:51:09 DEBUG TransactionImpl:101 - committing
2021-11-02 11:51:09 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-11-02 11:51:09 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-11-02 11:51:09 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#2], was: [com.example.models.User.likePosts#2] (initialized)
2021-11-02 11:51:09 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-11-02 11:51:09 DEBUG Collections:61 - Collection dereferenced: [com.example.models.User.likePosts#1]
2021-11-02 11:51:09 DEBUG Collections:61 - Collection dereferenced: [com.example.models.User.posts#1]
2021-11-02 11:51:09 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
2021-11-02 11:51:09 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 2 removals to 4 collections
2021-11-02 11:51:09 DEBUG EntityPrinter:110 - Listing entities:
2021-11-02 11:51:09 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, likePosts=[], id=1, posts=[], email=rick@mail.com, username=ricksanchez}
2021-11-02 11:51:09 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, likePosts=[], id=2, posts=[], email=msmith@mail.com, username=morty}
2021-11-02 11:51:09 DEBUG SQL:94 - 
    delete 
    from
        users 
    where
        user_id=?
2021-11-02 11:51:09 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:09 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:09 DEBUG SQL:94 - 
    select
        * 
    from
        users
2021-11-02 11:51:09 DEBUG Loader:384 - Result set row: 0
2021-11-02 11:51:09 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-11-02 11:51:09 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-11-02 11:51:09 DEBUG JdbcCoordinatorImpl:183 - HHH000420: Closing un-released batch
2021-11-02 11:51:09 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-11-02 11:51:09 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e9bf744] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@41da3aee]
2021-11-02 11:51:09 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-11-02 11:51:09 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://javareact210927.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhibernatedb]
2021-11-02 11:51:09 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
